window.initImages = () => {
const s = require("Storage")
s.erase("battery.i");
s.write("battery.i", [0,105,1,28,1,27,46,179,19,46,27,1,128,3,27,36,5,128,19,5,36,27,128,3,46,5,128,21,5,46,128,3,51,128,23,51,128,3,51,128,23,51,0,38,6,51,128,23,51,0,51,38,51,128,23,51,0,51,49,51,128,23,51,0,51,38,51,128,23,51,0,38,6,51,128,23,51,128,3,46,5,128,21,5,46,128,3,27,36,5,128,19,5,36,27,128,3,1,27,46,179,19,46,27,1,128,3], 0, 170);
console.log("battery.i glyph 0 done, written 107 of 170 bytes");
s.write("battery.i", [0,61,1,5,128,4,11,128,3,18,16,128,2,2,53,2,128,2,34,47,128,2,11,62,31,128,2,49,63,14,0,26,191,2,53,35,21,18,40,63,18,128,2,53,39,128,2,11,57,3,128,2,33,18,128,3,31,128,3,6,4,128,3], 107, 170);
console.log("battery.i glyph 1 done, written 170 of 170 bytes");
console.log("Upload battery.i done", s.getFree(), "memory left");

s.erase("icon-level.i");
s.write("icon-level.i", [13,84,1,140,128,114,1,5,8,137,2,6,2,128,131,3,11,145,7,13,4,128,127,1,10,145,11,11,128,125,7,16,145,3,15,10,7,6,9,13,145,4,12,128,122,4,14,145,3,16,7,128,6,3,14,145,3,10,128,119,2,12,145,4,10,1,128,2,9,150,2,17,1,0,1,14,145,3,5,128,116,1,9,145,4,8,128,3,10,34,171,4,39,13,0,2,15,145,2,15,128,115,6,16,145,3,12,1,128,2,3,28,171,7,41,10,0,6,145,3,8,128,112,4,14,145,3,16,5,128,2,2,0,3,40,171,8,37,1,0,13,145,2,16,1,128,109,2,11,145,4,10,1,128,2,25,58,16,0,18,171,9,21,0,3,145,3,11,128,108,8,16,145,3,12,3,128,2,16,52,191,2,52,128,2,35,171,8,41,4,0,10,145,3,3,128,105,6,15,145,3,15,5,128,2,8,43,191,5,26,0,11,171,9,27,0,1,16,145,2,13,128,103,3,13,145,3,16,8,128,2,2,33,62,191,6,59,4,0,30,171,9,9,0,7,145,3,6,128,100,1,10,145,4,10,1,128,2,23,57,191,9,36,0,6,41,171,8,34,128,2,14,145,2,15,128,99,8,16,145,3,13,3,128,2,14,50,191,11,62,10,0,23,171,9,16,0,5,145,3,9,128,96,5,15,145,3,15,6,128,2,6,40,191,14,46,0,2,39,171,8,38,2,0,12,145,2,16,2,128,93,3,12,145,3,16,8,128,2,1,30,61,191,16,19,0,16,171,9,23,0,2,145,3,11,128,91,1,10,145,4,11,2,128,2,20,55,191,18,54,1,0,34,171,8,41,5,0,9,145,3,4,128,89,7,16,145,3,14,4,128,2,11,47,191,21,29,0,10,171,9,29,0,1,16,145,2,14,128,87,4,14,145,3,15,6,128,2,5,38,191,23,60,5,0,28,171,9,11,0,7,145,3,7,128,84,2,12,145,3,16,9,1,0,1,28,59,191,25,39,0,5,41,171,8,35,128,2,14,145,2,16,1,128,81,1,9,145,4,12,2,128,2,18,54,191,28,12,0,21,171,9,18,0,4,145,3,9,128,80,6,15,145,3,14,4,128,2,9,45,191,30,48,0,1,38,171,8,39,3,0,11,145,3,2,128,77,4,14,145,3,16,7,128,2,3,35,62,191,12,62,49,36,32,33,43,59,191,13,21,0,14,171,9,24,0,2,16,145,2,12,128,75,2,11,145,4,10,1,128,2,25,58,191,12,62,34,7,128,5,1,22,55,191,11,56,2,0,33,171,8,42,7,0,9,145,3,5,128,73,8,16,145,3,12,3,128,2,15,52,191,13,55,13,128,3,11,21,19,11,128,2,2,41,191,11,31,0,8,42,171,8,31,128,2,15,145,2,14,128,71,6,15,145,3,15,5,128,2,8,42,191,14,57,8,0,1,128,2,38,171,3,38,15,128,2,39,191,10,61,7,0,26,171,9,13,0,6,145,3,7,128,68,3,13,145,3,16,8,128,2,2,32,61,191,15,16,0,2,11,0,7,171,5,42,128,2,2,53,191,10,41,0,3,40,171,8,36,128,2,13,145,2,14,128,66,1,10,145,4,14,1,128,2,23,57,191,16,42,0,1,15,8,0,19,171,5,32,128,3,18,191,11,14,0,19,171,9,19,0,5,145,3,3,128,64,8,16,145,5,16,2,0,30,191,18,17,0,10,17,3,0,30,171,5,21,0,6,128,2,54,191,10,51,0,1,36,171,8,36,128,2,16,145,2,7,128,62,5,15,145,8,11,0,5,60,191,16,61,128,2,144,2,128,2,41,171,5,9,0,12,6,0,38,191,11,24,0,13,171,9,5,0,14,145,2,9,128,60,3,12,145,11,4,0,28,191,16,51,0,2,17,11,0,10,171,5,40,128,2,16,9,0,26,191,11,58,3,0,31,171,8,5,0,13,145,2,10,128,58,1,10,145,12,15,4,0,1,54,191,15,49,0,3,17,7,0,22,171,5,29,0,4,17,10,0,24,191,12,34,0,7,42,171,6,41,1,0,16,145,2,8,128,57,7,16,145,11,16,8,128,4,18,191,15,52,0,2,17,2,0,33,171,5,18,0,8,17,9,0,28,191,12,62,9,0,24,171,6,23,0,3,145,3,5,128,55,4,14,145,12,10,1,128,2,15,35,2,0,45,191,14,62,2,0,13,0,2,42,171,5,6,0,13,17,5,0,39,191,13,44,0,3,39,171,4,33,2,0,11,145,2,16,1,128,53,2,12,145,12,13,3,128,2,9,33,171,2,23,0,10,62,191,14,19,0,5,0,13,171,5,38,128,2,16,15,128,2,58,191,14,17,0,18,171,2,42,26,1,0,6,145,3,10,128,52,1,9,145,12,15,6,128,2,4,27,42,171,3,42,6,0,35,191,14,48,128,3,25,171,5,26,0,5,17,5,0,22,191,15,53,128,2,35,33,8,128,2,7,145,3,16,1,128,51,6,15,145,11,16,8,128,2,1,20,41,171,6,30,0,3,58,191,14,23,128,2,31,171,5,15,0,9,5,0,3,57,191,16,27,0,4,128,2,1,11,145,4,6,128,50,4,13,145,12,11,2,128,2,13,37,171,9,12,0,25,191,14,60,13,0,2,25,41,171,2,42,3,0,3,0,1,47,191,16,60,26,128,3,8,16,145,4,7,128,49,2,11,145,12,14,4,128,2,7,32,171,11,36,128,2,52,191,14,60,19,128,2,2,10,15,11,128,3,6,48,191,16,39,5,128,2,2,13,145,4,15,4,128,49,8,16,145,11,15,7,128,2,3,25,42,171,13,17,0,16,191,16,43,15,128,5,5,32,59,191,15,48,12,128,3,10,145,4,16,9,128,49,5,15,145,11,16,9,1,128,2,18,40,171,13,42,24,2,128,2,48,191,17,57,46,40,42,53,191,16,56,21,128,3,8,145,5,12,2,128,48,3,13,145,3,16,9,145,7,12,2,128,2,12,36,171,14,30,6,128,2,2,0,26,191,36,61,32,2,128,2,8,16,145,4,14,4,128,48,1,10,145,4,11,1,0,10,145,4,14,5,128,2,6,30,171,14,36,12,128,2,2,12,13,0,16,191,35,42,7,128,2,5,15,145,4,16,7,128,49,7,16,145,3,13,3,128,3,1,16,17,16,7,128,2,2,23,42,171,13,40,19,128,2,1,9,16,17,11,0,20,191,33,51,15,128,2,3,13,145,5,10,1,128,48,5,14,145,3,15,6,128,2,5,39,15,0,7,10,1,128,2,17,39,171,13,42,25,3,128,2,6,15,145,2,16,3,0,39,191,31,58,25,128,2,1,10,145,5,12,2,128,48,2,12,145,3,16,9,128,2,1,29,60,63,52,128,4,10,34,171,14,32,8,128,2,4,14,145,3,12,2,0,9,62,191,29,62,34,3,128,2,8,16,145,4,14,5,128,48,1,9,145,4,11,2,128,2,19,54,191,4,25,0,1,28,171,14,37,14,128,2,2,11,145,3,15,5,128,2,13,58,191,29,45,9,128,2,5,14,145,4,16,8,128,49,7,16,145,3,14,4,128,2,10,46,191,6,58,3,0,30,171,12,41,21,1,128,2,8,16,145,2,16,8,128,2,2,33,62,191,28,53,17,128,2,2,12,145,5,10,1,128,48,4,14,145,3,16,7,128,2,4,36,62,191,8,35,0,6,42,171,9,42,27,4,128,2,6,15,145,3,10,1,128,2,23,57,191,28,59,28,128,2,1,9,16,145,4,13,3,128,48,2,11,145,4,10,1,128,2,26,59,191,10,62,9,0,23,171,8,34,9,128,2,3,13,145,3,13,3,128,2,13,50,191,29,38,4,128,2,6,15,145,4,15,6,128,48,1,9,145,4,12,2,128,2,17,52,191,13,45,0,2,39,171,5,38,16,128,2,1,10,145,3,15,6,128,2,6,40,191,29,46,11,128,2,4,14,145,4,16,8,128,49,6,15,145,3,14,5,128,2,8,43,191,16,18,0,17,171,3,41,22,1,128,2,8,16,145,2,16,8,128,2,1,30,61,191,28,55,20,128,2,2,11,145,5,11,2,128,48,4,13,145,3,16,8,128,2,3,33,62,191,17,54,1,0,35,43,29,5,128,2,5,14,145,3,11,2,128,2,20,55,191,28,60,30,1,128,2,8,16,145,4,13,4,128,48,2,11,145,4,10,1,128,2,24,57,191,20,28,0,8,11,128,2,3,12,145,3,14,4,128,2,11,47,191,29,40,6,128,2,6,15,145,4,15,6,128,49,8,16,145,3,13,3,128,2,14,50,191,22,60,5,128,2,1,10,145,3,15,6,128,2,4,37,191,29,49,13,128,2,3,13,145,5,9,1,128,48,5,15,145,3,15,6,128,2,7,41,191,25,38,128,2,13,145,2,16,9,1,0,1,28,59,191,28,57,23,128,2,1,10,145,5,12,2,128,48,3,13,145,3,16,8,128,2,2,31,61,191,27,22,128,2,5,6,1,128,2,18,53,191,28,61,32,2,128,2,8,16,145,4,14,4,128,48,1,10,145,4,11,2,128,2,21,56,191,29,62,26,1,128,3,11,45,191,29,42,7,128,2,5,15,145,4,16,7,128,49,7,16,145,3,13,4,128,2,12,48,191,33,57,44,40,53,191,29,51,15,128,2,3,13,145,5,10,1,128,48,5,14,145,3,15,6,128,2,5,38,191,14,62,52,47,48,58,191,47,58,25,128,2,1,10,145,5,12,2,128,48,2,12,145,3,16,9,128,2,1,28,60,191,13,51,22,2,128,4,11,36,62,191,42,62,35,3,128,2,7,16,145,4,14,5,128,48,1,9,145,4,11,1,128,2,18,54,191,13,62,28,128,3,2,4,3,128,3,9,51,191,40,44,9,128,2,5,14,145,4,16,8,128,49,7,16,145,3,13,2,128,2,10,46,191,14,62,19,128,2,7,15,145,3,12,1,128,2,3,48,191,37,53,18,128,2,2,12,145,5,10,1,128,48,1,12,145,3,16,9,128,3,36,62,191,15,28,128,2,11,145,3,15,5,128,2,7,9,0,5,58,191,34,59,28,1,0,1,9,16,145,4,13,3,128,49,1,14,145,3,12,2,128,4,46,191,15,52,128,2,13,145,2,16,8,128,2,2,23,42,41,8,0,23,191,33,38,4,128,2,7,15,145,4,15,6,128,51,13,145,3,7,128,2,6,30,23,0,11,191,15,25,0,7,145,2,12,2,128,2,14,38,171,3,37,0,1,57,191,30,47,11,128,2,4,14,145,4,16,8,128,52,7,145,2,16,5,0,1,23,41,43,41,5,0,36,191,14,4,0,14,15,5,128,2,7,32,171,6,13,0,39,191,28,55,20,128,2,2,11,145,5,11,2,128,53,16,145,2,7,0,4,34,171,4,29,0,4,59,191,12,56,0,1,9,128,2,1,23,42,171,7,20,0,25,191,26,61,30,1,128,2,8,16,145,4,13,4,128,54,5,145,2,15,128,2,33,171,6,11,0,27,191,12,51,128,4,14,38,171,7,41,20,128,2,22,191,25,40,6,128,2,6,15,145,4,15,6,128,56,9,145,2,10,0,11,171,7,35,128,2,53,191,11,53,128,2,6,31,171,8,29,5,128,3,23,191,23,50,13,128,2,3,13,145,5,9,1,128,57,12,145,2,7,0,20,171,8,18,0,17,191,11,62,1,0,39,171,7,36,11,128,2,3,5,0,33,191,21,57,23,128,2,1,10,145,5,12,2,128,59,12,145,2,7,0,23,171,8,39,3,0,44,191,11,16,0,25,171,5,41,20,128,2,1,10,16,1,0,51,191,19,61,33,2,128,2,8,16,145,4,14,4,128,61,12,145,2,9,0,13,171,9,24,0,8,62,191,10,43,0,4,37,171,3,29,5,128,2,6,15,17,8,0,12,191,19,43,8,128,2,5,15,145,4,16,7,128,63,9,145,2,14,0,1,40,171,8,42,7,0,34,191,11,15,0,7,40,36,12,128,2,3,13,145,2,9,128,2,48,191,17,52,16,128,2,3,12,145,5,10,1,128,64,4,145,3,4,0,18,171,9,31,0,3,58,191,10,56,5,0,3,128,2,1,10,145,2,16,7,128,2,32,191,16,58,26,128,2,1,10,145,5,12,3,128,67,14,145,2,14,128,2,36,171,9,13,0,24,191,11,54,8,128,2,1,7,10,9,6,1,128,2,32,191,15,62,35,3,128,2,7,16,145,4,15,5,128,69,6,145,3,7,0,11,171,9,36,1,0,51,191,11,61,29,3,128,6,15,49,191,15,45,10,128,2,4,14,145,4,16,8,128,72,14,145,2,15,1,0,30,171,9,19,0,14,191,13,61,43,31,25,27,37,53,191,15,54,18,128,2,2,12,145,5,10,1,128,73,4,145,3,9,0,6,42,171,8,40,3,0,41,191,32,60,28,1,0,1,9,16,145,4,13,3,128,76,11,145,2,16,2,0,23,171,9,26,0,7,61,191,30,38,5,128,2,6,15,145,4,15,6,128,78,2,16,145,2,12,0,2,39,171,8,42,8,0,31,191,28,48,12,128,2,4,14,145,4,16,8,128,81,8,145,3,5,0,16,171,9,33,0,2,56,191,25,56,21,128,2,2,11,145,5,11,2,128,83,15,145,2,14,128,2,34,171,9,15,0,21,191,23,61,31,1,128,2,8,16,145,4,14,4,128,85,6,145,3,7,0,10,171,9,38,1,0,48,191,21,41,6,128,2,6,15,145,4,15,6,128,88,13,145,2,16,1,0,28,171,9,21,0,12,191,19,50,14,128,2,3,13,145,5,9,1,128,89,3,145,3,10,0,5,41,171,8,41,4,0,39,191,16,57,24,128,2,1,10,145,5,12,2,128,92,10,145,3,3,0,21,171,9,28,0,5,60,191,13,62,34,2,128,2,8,16,145,4,14,4,128,94,1,16,145,2,13,0,1,38,171,9,10,0,29,191,12,43,8,128,2,5,14,145,4,16,7,128,97,8,145,3,5,0,15,171,9,34,0,1,54,191,9,52,16,128,2,2,12,145,5,10,1,128,99,15,145,2,15,128,2,33,171,9,16,0,19,191,7,59,26,128,2,1,10,145,5,12,3,128,101,5,145,3,8,0,8,42,171,8,39,2,0,46,191,4,62,36,4,128,2,7,16,145,4,15,5,128,104,12,145,2,16,1,0,26,171,9,23,0,10,62,191,2,46,10,128,2,4,14,145,4,16,8,128,106,3,145,3,11,0,4,40,171,8,41,6,0,36,54,19,128,2,2,12,145,5,11,1,128,108,10,145,3,3,0,20,171,9,30,0,2,1,128,2,9,16,145,4,13,3,128,110,1,16,145,2,13,128,2,34,171,8,32,2,128,2,4,15,145,4,15,6,128,113,7,145,3,7,0,4,37,171,5,37,13,128,3,10,145,4,16,9,128,116,14,145,3,5,0,1,19,33,36,30,16,1,128,2,8,16,145,4,11,2,128,117,4,145,3,16,5,128,7,6,15,145,4,14,4,128,120,8,145,4,12,6,2,1,3,7,14,145,4,16,7,128,123,9,145,13,9,1,128,125,6,16,145,9,12,2,128,128,1,7,14,145,4,15,11,3,128,134,130,2,1,128,116], 0, 3414);
console.log("icon-level.i glyph 0 done, written 3414 of 3414 bytes");
console.log("Upload icon-level.i done", s.getFree(), "memory left");

s.erase("font1.i");
s.write("font1.i", [0,8,1,6,128,55,129,4,128,55], 0, 9025);
console.log("font1.i glyph 0 done, written 10 of 9025 bytes");
s.write("font1.i", [0,60,1,4,128,9,59,63,8,0,56,63,5,0,53,63,1,0,50,62,128,2,47,59,128,2,44,56,128,2,41,53,128,2,38,50,128,2,35,47,128,2,3,4,128,2,2,4,0,1,56,60,4,1,56,60,4,0,2,4,128,13], 10, 9025);
console.log("font1.i glyph 1 done, written 72 of 9025 bytes");
s.write("font1.i", [0,45,1,8,128,16,1,43,38,0,1,45,36,0,8,191,2,138,2,191,2,7,0,30,63,6,0,32,63,4,0,35,47,128,2,38,44,128,2,46,7,128,2,47,6,128,97], 72, 9025);
console.log("font1.i glyph 2 done, written 119 of 9025 bytes");
s.write("font1.i", [0,127,1,11,128,26,173,2,128,2,50,42,128,5,59,30,0,2,62,26,128,4,11,63,15,0,16,63,11,128,2,18,44,51,63,46,44,52,63,44,39,0,27,47,59,58,175,2,61,57,47,34,128,3,57,33,0,1,61,29,128,4,9,63,17,0,13,63,14,128,4,24,63,3,0,29,61,1,128,2,24,41,53,61,169,2,55,59,41,28,0,38,50,63,56,178,2,63,56,50,26,128,2,5,63,21,0,10,63,17,128,4,21,63,5,0,26,62,3,128,4,36,54,128,2,41,50,128,48], 119, 9025);
console.log("font1.i glyph 3 done, written 248 of 9025 bytes");
s.write("font1.i", [0,139,1,10,128,4,134,2,128,7,1,178,2,128,5,2,35,60,191,2,60,42,9,128,2,41,63,54,55,56,49,63,61,13,8,63,54,1,47,48,0,20,45,0,19,63,38,0,47,48,128,4,11,63,59,13,47,48,128,5,46,191,2,61,54,9,128,4,2,34,60,191,3,49,13,128,4,1,50,187,2,63,61,11,128,4,47,48,2,40,63,38,0,3,128,2,47,48,0,11,63,46,18,58,18,0,47,48,0,28,63,36,24,61,63,51,57,56,46,63,61,8,0,10,40,58,191,3,48,12,128,5,49,51,2,128,7,15,16,128,24], 248, 9025);
console.log("font1.i glyph 4 done, written 389 of 9025 bytes");
s.write("font1.i", [0,169,1,14,128,17,2,128,11,28,60,63,48,7,128,3,5,58,28,128,2,17,63,28,14,52,48,128,3,41,50,128,3,38,53,128,2,24,63,4,0,19,62,10,128,3,41,47,128,2,17,63,7,3,57,30,128,4,27,62,10,1,40,57,0,38,51,1,128,4,2,50,63,57,61,19,16,62,12,128,6,1,20,25,8,2,55,33,0,8,16,4,128,7,36,53,1,35,63,62,60,18,128,5,14,62,14,17,63,23,4,42,57,1,128,3,1,53,35,0,34,55,128,2,14,63,12,128,3,33,55,2,0,33,57,128,2,15,63,11,128,2,12,62,16,128,2,15,63,28,8,44,55,1,0,1,52,37,128,4,29,62,63,56,13,128,10,2,7,128,45], 389, 9025);
console.log("font1.i glyph 5 done, written 560 of 9025 bytes");
s.write("font1.i", [0,143,1,11,128,15,1,4,128,7,3,40,62,63,52,12,128,5,40,63,36,27,58,56,2,128,4,60,50,128,2,31,63,14,128,4,61,45,128,2,35,63,14,128,4,46,62,10,26,60,50,1,128,4,16,63,190,2,34,2,128,4,10,52,191,2,42,128,3,25,2,10,61,57,14,47,63,29,0,19,63,26,32,63,17,0,4,54,63,21,50,55,1,49,62,1,128,2,8,58,62,63,23,0,41,63,13,128,3,27,191,2,11,0,16,63,58,34,21,38,63,55,62,57,8,0,21,57,191,2,59,36,2,19,61,34,128,3,7,8,128,4,3,128,34], 560, 9025);
console.log("font1.i glyph 6 done, written 705 of 9025 bytes");
s.write("font1.i", [0,25,1,4,128,8,1,43,38,0,8,191,2,10,0,30,63,6,0,35,47,128,2,46,7,128,49], 705, 9025);
console.log("font1.i glyph 7 done, written 732 of 9025 bytes");
s.write("font1.i", [0,90,1,6,128,10,2,128,4,20,57,7,128,2,16,62,51,1,0,2,54,62,11,128,2,29,63,31,128,3,52,63,3,128,2,9,63,54,128,3,18,63,42,128,3,25,63,30,128,3,25,63,30,128,3,19,63,42,128,3,9,63,54,128,4,52,63,3,128,3,28,63,33,128,3,1,52,63,15,128,3,12,60,55,3,128,3,14,50,5,128,6], 732, 9025);
console.log("font1.i glyph 8 done, written 824 of 9025 bytes");
s.write("font1.i", [0,87,1,6,128,7,2,128,4,4,55,25,128,4,47,63,21,128,3,8,60,58,4,128,3,26,63,35,128,4,60,57,128,4,49,63,14,128,3,37,63,24,128,3,25,63,31,128,3,24,63,31,128,3,36,63,24,128,3,49,63,15,128,3,60,57,128,3,28,63,33,128,2,11,62,56,3,0,1,52,62,16,128,2,3,48,18,128,9], 824, 9025);
console.log("font1.i glyph 9 done, written 913 of 9025 bytes");
s.write("font1.i", [0,41,1,6,128,9,3,128,4,20,38,128,2,21,46,17,31,32,38,1,22,45,51,30,4,6,36,43,47,43,13,16,29,15,33,17,32,128,2,17,36,128,68], 913, 9025);
console.log("font1.i glyph 10 done, written 956 of 9025 bytes");
s.write("font1.i", [0,63,1,9,128,39,23,49,9,128,6,29,63,12,128,6,29,63,12,128,3,6,135,2,33,63,18,135,2,4,53,191,7,36,30,164,2,49,63,42,164,2,21,128,3,29,63,12,128,6,29,63,12,128,6,29,63,12,128,6,4,10,1,128,48], 956, 9025);
console.log("font1.i glyph 11 done, written 1021 of 9025 bytes");
s.write("font1.i", [0,27,1,4,128,49,4,2,0,4,60,56,1,4,60,63,12,0,19,61,2,0,52,26,128,2,14,128,6], 1021, 9025);
console.log("font1.i glyph 12 done, written 1050 of 9025 bytes");
s.write("font1.i", [0,14,1,6,128,54,35,190,4,11,26,175,4,8,128,48], 1050, 9025);
console.log("font1.i glyph 13 done, written 1066 of 9025 bytes");
s.write("font1.i", [0,16,1,3,128,37,7,0,36,63,23,36,63,23,0,6,128,10], 1066, 9025);
console.log("font1.i glyph 14 done, written 1084 of 9025 bytes");
s.write("font1.i", [0,86,1,9,128,15,13,56,39,128,6,40,63,20,128,5,4,61,56,128,6,29,63,31,128,6,55,62,6,128,5,18,63,42,128,6,44,63,15,128,5,7,63,53,128,6,33,63,27,128,5,1,58,61,3,128,5,22,63,38,128,6,48,63,11,128,5,11,63,49,128,6,37,63,22,128,5,3,60,58,1,128,5,5,21,14,128,24], 1084, 9025);
console.log("font1.i glyph 15 done, written 1172 of 9025 bytes");
s.write("font1.i", [0,138,1,12,128,17,7,2,128,7,1,35,57,63,62,50,14,128,4,2,48,63,53,35,42,61,62,21,128,3,30,63,43,1,128,2,15,60,59,3,0,3,59,61,4,128,4,33,63,31,0,15,63,39,128,5,7,63,47,0,24,63,29,128,6,61,57,0,31,63,22,128,6,55,63,0,24,63,28,128,6,61,57,0,15,63,38,128,5,7,63,48,0,3,188,2,3,128,4,32,63,32,128,2,31,63,42,1,128,2,14,60,59,4,128,2,3,50,63,52,34,42,61,62,23,128,4,1,37,59,191,2,52,15,128,8,9,3,128,41], 1172, 9025);
console.log("font1.i glyph 16 done, written 1312 of 9025 bytes");
s.write("font1.i", [0,73,1,6,128,14,13,54,63,8,0,30,62,191,2,8,26,63,49,51,63,8,3,29,0,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,3,45,63,8,128,24], 1312, 9025);
console.log("font1.i glyph 17 done, written 1387 of 9025 bytes");
s.write("font1.i", [0,101,1,10,128,14,1,8,1,128,5,17,46,60,63,62,40,5,128,2,20,62,61,43,33,55,63,50,1,0,49,57,8,128,3,46,63,19,0,3,8,128,4,25,63,30,128,7,35,63,21,128,6,2,55,63,4,128,6,44,63,40,128,6,38,63,50,3,128,4,2,43,63,49,3,128,4,5,49,63,44,2,128,4,9,55,63,38,128,5,5,59,63,61,173,5,29,9,191,8,41,128,40], 1387, 9025);
console.log("font1.i glyph 18 done, written 1490 of 9025 bytes");
s.write("font1.i", [0,117,1,10,128,14,7,5,128,5,6,41,57,191,2,56,24,128,2,10,56,63,47,32,46,62,63,24,0,14,59,19,128,3,16,63,51,128,2,3,128,5,187,2,128,7,10,63,45,128,4,21,26,41,59,50,8,128,4,56,191,2,58,10,128,5,18,23,36,53,62,28,128,7,5,61,62,4,0,2,128,5,47,63,13,22,57,13,128,3,8,191,2,3,23,190,2,47,32,42,60,63,35,128,2,13,45,59,191,2,59,30,1,128,5,9,7,128,34], 1490, 9025);
console.log("font1.i glyph 19 done, written 1609 of 9025 bytes");
s.write("font1.i", [0,103,1,11,128,27,15,191,2,18,128,6,3,55,191,2,18,128,6,40,63,48,63,18,128,5,21,63,33,34,63,18,128,4,6,59,51,1,34,63,18,128,4,47,61,10,0,34,63,18,128,3,28,63,27,128,2,34,63,18,128,2,11,62,46,128,3,34,63,18,128,2,48,63,46,167,3,52,63,46,39,2,47,191,9,4,3,132,5,36,63,21,4,128,7,34,63,18,128,8,34,63,18,128,46], 1609, 9025);
console.log("font1.i glyph 20 done, written 1714 of 9025 bytes");
s.write("font1.i", [0,104,1,10,128,21,53,191,6,50,128,2,55,62,174,5,36,128,2,57,56,128,8,58,54,128,8,60,52,0,2,7,128,5,62,56,44,191,2,61,35,2,128,2,61,63,50,36,44,62,63,41,128,2,6,17,128,3,5,55,63,11,128,7,30,63,23,128,7,30,63,22,6,54,21,128,3,2,54,63,9,17,60,63,48,159,2,54,63,36,128,2,8,44,59,191,2,59,29,1,128,5,8,7,128,34], 1714, 9025);
console.log("font1.i glyph 21 done, written 1820 of 9025 bytes");
s.write("font1.i", [0,130,1,10,128,15,7,3,128,6,33,56,191,2,53,19,128,2,1,43,63,51,32,39,59,62,6,0,25,63,44,1,128,2,8,24,0,1,56,62,5,128,6,13,63,41,128,2,7,3,128,3,22,63,158,2,57,191,2,49,12,0,31,63,54,61,43,34,55,63,59,7,28,63,62,11,128,3,35,63,36,21,63,39,128,4,7,63,49,10,63,54,128,4,13,63,47,0,47,63,18,128,3,39,63,32,0,14,188,2,32,25,42,63,56,3,128,2,12,51,62,191,2,43,7,128,5,2,10,1,128,33], 1820, 9025);
console.log("font1.i glyph 22 done, written 1952 of 9025 bytes");
s.write("font1.i", [0,72,1,10,128,21,191,8,40,0,174,6,56,63,34,128,7,54,63,8,128,6,20,63,43,128,7,49,63,14,128,6,15,63,49,128,7,44,63,21,128,6,10,63,55,128,7,38,63,28,128,6,5,62,60,3,128,6,33,63,34,128,6,2,59,62,7,128,6,27,63,41,128,45], 1952, 9025);
console.log("font1.i glyph 23 done, written 2026 of 9025 bytes");
s.write("font1.i", [0,132,1,10,128,14,135,2,128,5,2,35,60,191,2,61,35,3,128,2,45,63,56,163,2,56,63,46,0,9,63,51,1,128,2,1,50,63,11,14,63,35,128,4,33,63,16,0,57,53,3,128,2,3,52,58,128,2,16,57,58,165,2,186,2,18,128,3,28,191,4,30,128,2,1,44,63,45,23,22,44,63,44,1,25,63,35,128,4,34,63,26,38,63,15,128,4,14,63,39,28,63,37,128,4,36,63,29,5,56,63,53,162,2,53,63,56,6,0,8,41,62,191,3,41,8,128,4,1,137,2,1,128,33], 2026, 9025);
console.log("font1.i glyph 24 done, written 2160 of 9025 bytes");
s.write("font1.i", [0,127,1,10,128,14,6,4,128,6,28,59,191,2,54,26,128,3,36,63,53,28,27,52,63,31,0,10,63,59,3,128,2,3,58,62,5,24,63,37,128,4,34,63,30,28,63,28,128,4,16,63,42,16,63,51,1,128,3,48,63,49,0,48,63,58,36,31,52,56,63,53,0,5,42,191,3,48,14,63,44,128,3,4,13,4,0,18,63,35,128,7,44,63,16,0,10,18,128,3,22,63,48,128,2,47,63,44,31,42,63,57,11,128,2,8,45,62,63,62,46,7,128,5,1,10,2,128,34], 2160, 9025);
console.log("font1.i glyph 25 done, written 2289 of 9025 bytes");
s.write("font1.i", [0,27,1,3,128,15,16,43,9,44,63,31,14,40,7,128,13,7,0,36,63,23,36,63,23,0,6,128,10], 2289, 9025);
console.log("font1.i glyph 26 done, written 2318 of 9025 bytes");
s.write("font1.i", [0,33,1,3,128,15,14,43,11,41,63,34,12,40,9,128,13,6,0,32,63,26,33,63,44,0,51,31,20,54,3,4,10,128,4], 2318, 9025);
console.log("font1.i glyph 27 done, written 2353 of 9025 bytes");
s.write("font1.i", [0,67,1,9,128,35,11,128,6,18,50,48,128,4,16,49,63,55,21,128,2,14,47,63,54,23,1,0,10,45,63,52,21,128,4,32,63,37,128,6,13,49,63,49,18,128,6,18,50,63,51,20,128,6,18,51,63,52,19,128,6,19,51,48,128,8,12,128,45], 2353, 9025);
console.log("font1.i glyph 28 done, written 2422 of 9025 bytes");
s.write("font1.i", [0,31,1,10,128,50,5,145,8,1,21,191,8,4,8,154,8,2,128,11,129,8,0,21,191,8,4,14,170,8,3,128,70], 2422, 9025);
console.log("font1.i glyph 29 done, written 2455 of 9025 bytes");
s.write("font1.i", [0,67,1,9,128,27,11,128,8,42,53,20,128,6,18,53,63,51,19,128,6,20,51,63,50,17,128,6,19,50,63,48,13,128,6,32,63,38,128,4,15,47,63,52,15,128,2,17,48,63,52,21,128,2,16,50,63,53,21,128,4,42,53,22,128,6,11,128,53], 2455, 9025);
console.log("font1.i glyph 30 done, written 2524 of 9025 bytes");
s.write("font1.i", [0,90,1,9,128,13,4,7,128,5,28,52,191,2,58,25,128,2,40,63,53,34,43,62,63,21,0,32,40,128,3,22,63,47,128,6,2,63,54,128,6,26,63,39,128,3,5,33,53,63,57,6,128,3,17,63,61,40,6,128,4,17,63,28,128,6,17,63,28,128,6,2,8,3,128,7,7,128,7,25,63,34,128,6,25,63,34,128,7,6,128,31], 2524, 9025);
console.log("font1.i glyph 31 done, written 2616 of 9025 bytes");
s.write("font1.i", [0,193,1,15,128,34,1,17,31,41,40,28,11,128,7,11,44,25,10,0,2,14,37,33,1,128,4,22,40,4,128,6,17,43,128,3,8,42,128,2,2,18,27,11,0,11,4,22,29,128,2,43,7,0,9,53,63,61,63,31,63,28,0,43,4,12,33,0,1,53,57,16,0,17,60,63,16,0,26,17,24,19,0,26,63,19,128,3,48,63,4,0,13,30,37,7,0,40,61,128,4,48,57,128,2,11,31,40,4,0,46,60,1,128,2,8,63,46,128,2,149,2,28,16,0,34,63,26,0,1,42,63,44,128,2,43,4,15,31,0,5,57,63,56,60,35,41,62,36,46,24,128,2,43,7,0,5,29,33,15,0,3,26,33,13,128,3,7,44,3,128,13,13,45,16,128,4,2,25,10,128,6,2,31,169,2,38,168,2,17,128,11,2,128,22], 2616, 9025);
console.log("font1.i glyph 32 done, written 2811 of 9025 bytes");
s.write("font1.i", [0,114,1,13,128,30,1,57,63,31,128,9,21,191,2,57,128,9,47,63,55,63,20,128,7,9,63,54,18,63,46,128,7,35,63,29,0,55,63,8,128,5,2,59,62,5,0,30,63,34,128,5,24,63,41,128,2,6,62,58,1,128,4,50,63,15,128,3,42,63,22,128,3,12,63,59,148,4,34,63,49,128,3,38,191,9,11,0,3,189,2,154,6,40,63,37,0,26,63,39,128,6,4,61,60,2,52,63,12,128,7,39,63,25,128,52], 2811, 9025);
console.log("font1.i glyph 33 done, written 2927 of 9025 bytes");
s.write("font1.i", [0,118,1,11,128,22,27,191,5,62,52,25,128,2,27,63,49,167,3,51,191,2,26,0,27,63,24,128,4,24,63,52,0,27,63,24,128,4,1,62,56,0,27,63,24,128,4,20,63,39,0,27,63,46,163,3,47,63,51,6,0,27,191,7,39,1,0,27,63,27,133,3,11,33,63,45,0,27,63,24,128,5,44,63,9,27,63,24,128,5,33,63,25,27,63,24,128,4,5,57,63,17,27,63,48,167,3,45,62,63,49,0,27,191,6,55,36,4,128,45], 2927, 9025);
console.log("font1.i glyph 34 done, written 3047 of 9025 bytes");
s.write("font1.i", [0,113,1,12,128,18,7,3,128,7,8,42,58,191,2,53,32,1,128,3,22,60,63,48,34,40,57,63,51,6,0,13,63,59,18,128,3,2,41,40,0,1,52,63,17,128,8,15,63,44,128,9,27,63,27,128,9,37,63,18,128,9,28,63,26,128,9,15,63,42,128,9,1,53,63,15,128,9,14,63,58,17,128,3,1,166,2,128,3,24,61,63,48,34,40,56,63,52,6,128,3,9,44,59,191,2,54,33,1,128,7,9,4,128,40], 3047, 9025);
console.log("font1.i glyph 35 done, written 3162 of 9025 bytes");
s.write("font1.i", [0,124,1,12,128,24,27,191,4,56,45,31,3,128,3,27,63,51,171,2,50,61,63,57,20,128,2,27,63,24,128,4,27,61,63,14,0,27,63,24,128,5,17,63,54,2,27,63,24,128,6,41,63,18,27,63,24,128,6,24,63,30,27,63,24,128,6,15,63,39,27,63,24,128,6,24,63,31,27,63,24,128,6,40,63,18,27,63,24,128,5,15,63,55,3,27,63,24,128,4,25,60,63,15,0,27,63,50,170,2,49,60,63,57,21,128,2,27,191,4,56,45,32,3,128,51], 3162, 9025);
console.log("font1.i glyph 36 done, written 3288 of 9025 bytes");
s.write("font1.i", [0,72,1,10,128,20,9,191,8,60,9,63,58,174,6,43,9,63,43,128,7,9,63,43,128,7,9,63,43,128,7,9,63,53,158,6,7,9,191,8,15,9,63,50,147,6,4,9,63,43,128,7,9,63,43,128,7,9,63,43,128,7,9,63,58,173,6,42,9,191,8,60,128,40], 3288, 9025);
console.log("font1.i glyph 37 done, written 3362 of 9025 bytes");
s.write("font1.i", [0,73,1,10,128,20,41,191,8,28,41,63,49,174,6,20,41,63,11,128,7,41,63,11,128,7,41,63,11,128,7,41,63,33,154,5,19,0,41,191,7,47,0,41,63,31,152,5,18,0,41,63,11,128,7,41,63,11,128,7,41,63,11,128,7,41,63,11,128,7,41,63,11,128,47], 3362, 9025);
console.log("font1.i glyph 38 done, written 3437 of 9025 bytes");
s.write("font1.i", [0,133,1,13,128,19,2,8,128,9,26,51,62,63,60,49,20,128,4,5,45,63,58,41,33,47,61,63,42,1,128,2,43,63,42,3,128,3,8,51,30,128,2,21,63,49,128,10,46,63,12,128,10,187,2,128,10,5,63,50,128,4,58,190,4,10,0,60,58,128,4,42,173,2,57,63,10,0,47,63,11,128,6,40,63,10,0,23,63,47,128,6,40,63,10,128,2,45,63,41,3,128,3,6,50,63,10,128,2,5,47,63,57,41,32,43,61,63,43,3,128,4,28,53,191,2,61,49,21,128,8,3,10,128,44], 3437, 9025);
console.log("font1.i glyph 39 done, written 3572 of 9025 bytes");
s.write("font1.i", [0,106,1,12,128,24,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,53,158,6,50,63,15,9,191,10,15,9,63,49,147,6,45,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,9,63,42,128,6,37,63,15,128,48], 3572, 9025);
console.log("font1.i glyph 40 done, written 3680 of 9025 bytes");
s.write("font1.i", [0,45,1,3,128,6,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,8,63,43,128,12], 3680, 9025);
console.log("font1.i glyph 41 done, written 3727 of 9025 bytes");
s.write("font1.i", [0,86,1,9,128,24,32,63,20,128,6,32,63,20,128,6,32,63,20,128,6,32,63,20,128,6,32,63,20,128,6,32,63,20,128,6,32,63,20,128,6,32,63,20,128,6,32,63,20,0,1,128,4,47,63,13,7,54,16,128,2,6,63,61,2,15,60,61,43,33,56,63,31,128,2,12,47,62,63,61,31,128,5,2,10,1,128,30], 3727, 9025);
console.log("font1.i glyph 42 done, written 3815 of 9025 bytes");
s.write("font1.i", [0,131,1,11,128,22,28,63,23,128,4,16,62,59,10,28,63,23,128,3,9,59,62,15,0,28,63,23,128,2,5,55,63,23,128,2,28,63,23,0,1,49,63,31,128,3,28,63,23,0,41,63,40,128,4,28,63,23,32,63,48,1,128,4,28,63,46,191,2,54,3,128,4,28,191,2,53,41,63,43,128,4,28,63,57,8,2,52,63,28,128,3,28,63,25,128,2,9,60,62,14,128,2,28,63,23,128,3,21,63,56,4,0,28,63,23,128,4,36,63,45,0,28,63,23,128,4,1,50,63,30,128,44], 3815, 9025);
console.log("font1.i glyph 43 done, written 3948 of 9025 bytes");
s.write("font1.i", [0,70,1,9,128,18,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,1,128,6,51,63,173,6,26,51,191,7,36,128,36], 3948, 9025);
console.log("font1.i glyph 44 done, written 4020 of 9025 bytes");
s.write("font1.i", [0,153,1,13,128,26,27,63,40,128,7,12,63,56,27,191,2,10,128,6,44,63,56,27,191,2,41,128,5,13,191,2,56,27,191,3,10,128,4,45,191,2,56,27,63,39,63,42,128,3,14,63,43,60,56,27,63,24,46,63,11,128,2,46,63,11,60,56,27,63,24,14,63,43,0,15,63,42,0,60,56,27,63,24,0,45,63,12,47,63,10,0,60,56,27,63,24,0,13,63,54,63,41,128,2,60,56,27,63,24,128,2,44,191,2,9,128,2,60,56,27,63,24,128,2,12,63,40,128,3,60,56,27,63,24,128,3,42,8,128,3,60,56,27,63,24,128,3,2,128,4,60,56,128,52], 4020, 9025);
console.log("font1.i glyph 45 done, written 4175 of 9025 bytes");
s.write("font1.i", [0,124,1,11,128,22,59,63,16,128,6,63,51,59,63,56,4,128,5,63,51,59,191,2,43,128,5,63,51,59,58,53,63,25,128,4,63,51,59,56,11,189,2,9,128,3,63,51,59,56,0,26,63,51,1,128,2,63,51,59,56,128,2,44,63,34,128,2,63,51,59,56,128,2,5,57,63,17,0,63,51,59,56,128,3,16,63,57,5,63,51,59,56,128,4,34,63,44,63,51,59,56,128,4,1,50,191,2,51,59,56,128,5,9,60,63,51,59,56,128,6,23,63,51,128,44], 4175, 9025);
console.log("font1.i glyph 46 done, written 4301 of 9025 bytes");
s.write("font1.i", [0,142,1,14,128,20,7,3,128,9,8,42,58,191,2,52,29,128,6,22,60,63,48,34,40,56,63,48,6,128,3,13,63,59,18,128,3,2,39,63,47,128,2,1,52,63,17,128,6,44,63,25,0,15,63,44,128,7,8,63,50,0,27,63,27,128,8,55,61,0,37,63,18,128,8,46,63,8,28,63,26,128,8,54,62,1,15,63,42,128,7,7,63,50,0,1,53,63,15,128,6,43,63,27,128,2,14,63,58,17,128,3,1,37,63,49,128,4,24,61,63,48,34,39,56,63,50,7,128,5,9,44,59,191,2,54,31,1,128,9,9,4,128,48], 4301, 9025);
console.log("font1.i glyph 47 done, written 4445 of 9025 bytes");
s.write("font1.i", [0,107,1,11,128,22,41,191,4,62,53,37,5,128,2,41,63,49,174,2,51,191,2,59,7,0,41,63,10,128,3,6,35,63,46,0,41,63,10,128,5,55,62,1,41,63,10,128,5,49,63,5,41,63,10,128,4,9,61,56,0,41,63,24,144,2,21,40,59,63,26,0,41,191,6,62,32,128,2,41,63,38,161,2,32,23,8,128,3,41,63,10,128,8,41,63,10,128,8,41,63,10,128,8,41,63,10,128,52], 4445, 9025);
console.log("font1.i glyph 48 done, written 4554 of 9025 bytes");
s.write("font1.i", [0,156,1,14,128,20,7,3,128,9,8,42,58,191,2,52,29,128,6,22,60,63,48,34,40,56,63,48,6,128,3,13,63,59,18,128,3,2,39,63,47,128,2,1,52,63,17,128,6,44,63,25,0,15,63,44,128,7,8,63,50,0,27,63,27,128,8,55,61,0,37,63,18,128,8,45,63,8,28,63,26,128,5,6,128,2,52,63,2,15,63,42,128,4,5,56,37,8,63,54,0,1,53,63,15,128,3,2,46,63,58,63,26,128,2,14,63,58,17,128,3,3,55,63,62,4,128,3,24,61,63,48,34,37,55,63,60,63,50,2,128,3,9,44,59,191,2,58,32,2,28,35,128,7,9,5,128,48], 4554, 9025);
console.log("font1.i glyph 49 done, written 4712 of 9025 bytes");
s.write("font1.i", [0,127,1,11,128,22,41,191,4,62,53,37,5,128,2,41,63,49,174,2,51,191,2,59,7,0,41,63,10,128,3,6,35,63,46,0,41,63,10,128,5,55,62,1,41,63,10,128,5,49,63,5,41,63,10,128,4,9,61,58,0,41,63,24,144,2,21,40,59,63,28,0,41,191,6,58,22,128,2,41,63,38,161,2,58,63,13,128,3,41,63,10,128,2,21,63,48,128,3,41,63,10,128,3,41,63,27,128,2,41,63,10,128,3,4,57,61,9,0,41,63,10,128,4,19,63,49,128,45], 4712, 9025);
console.log("font1.i glyph 50 done, written 4841 of 9025 bytes");
s.write("font1.i", [0,123,1,11,128,15,3,10,1,128,6,14,50,191,2,62,52,25,128,3,10,61,62,43,28,40,59,63,42,128,2,39,63,27,128,3,6,46,18,128,2,50,63,9,128,8,42,63,42,2,128,7,15,62,63,60,40,19,2,128,5,15,49,191,3,60,32,2,128,5,8,28,50,191,2,41,128,8,14,191,2,6,0,3,128,6,44,63,14,1,48,45,5,128,3,3,59,63,4,5,46,63,60,45,31,38,58,63,36,128,3,24,49,61,191,2,59,30,1,128,6,8,5,128,37], 4841, 9025);
console.log("font1.i glyph 51 done, written 4966 of 9025 bytes");
s.write("font1.i", [0,74,1,11,128,22,48,191,9,11,35,174,3,58,63,48,174,3,8,128,4,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,8,45,63,6,128,48], 4966, 9025);
console.log("font1.i glyph 52 done, written 5042 of 9025 bytes");
s.write("font1.i", [0,121,1,12,128,24,3,63,48,128,6,17,63,35,3,63,48,128,6,17,63,35,3,63,48,128,6,17,63,35,3,63,48,128,6,17,63,35,3,63,48,128,6,17,63,35,3,63,48,128,6,17,63,35,3,63,48,128,6,17,63,35,2,63,49,128,6,18,63,34,0,57,58,128,6,27,63,25,0,46,63,13,128,5,46,63,14,0,18,63,51,5,128,3,26,63,49,128,3,39,63,58,38,32,47,63,59,11,128,4,24,56,191,2,61,44,6,128,7,4,9,128,41], 5042, 9025);
console.log("font1.i glyph 53 done, written 5165 of 9025 bytes");
s.write("font1.i", [0,121,1,14,128,28,20,63,43,128,7,8,63,56,0,1,57,63,6,128,6,33,63,31,128,2,32,63,31,128,5,1,57,62,6,128,2,7,63,56,128,5,21,63,43,128,4,44,63,19,128,4,47,63,17,128,4,18,63,45,128,3,9,63,54,128,6,55,63,8,128,2,35,63,28,128,6,29,63,33,0,1,59,61,4,128,6,5,62,58,1,23,63,40,128,8,41,63,21,48,63,14,128,8,15,63,54,63,52,128,10,53,191,2,26,128,10,27,63,60,3,128,61], 5165, 9025);
console.log("font1.i glyph 54 done, written 5288 of 9025 bytes");
s.write("font1.i", [0,203,1,19,128,38,50,63,14,128,4,1,59,63,24,128,5,50,63,14,30,63,34,128,4,16,191,2,44,128,4,6,63,57,0,10,63,53,128,4,36,63,189,2,2,128,3,25,63,38,128,2,54,63,9,128,3,55,60,32,63,20,128,3,44,63,18,128,2,34,63,28,128,2,11,63,41,11,63,39,128,2,2,61,60,1,128,2,14,63,48,128,2,31,63,21,0,55,59,128,2,19,63,42,128,4,57,63,4,0,51,61,2,0,35,63,15,0,39,63,22,128,4,38,63,23,7,63,44,128,2,14,63,35,0,58,62,3,128,4,18,63,42,27,63,24,128,3,58,55,14,63,46,128,5,1,188,2,48,62,4,128,3,38,63,45,63,26,128,6,42,191,2,47,128,4,18,191,3,6,128,6,22,191,2,26,128,4,1,60,63,50,128,7,3,62,63,6,128,5,42,63,30,128,80], 5288, 9025);
console.log("font1.i glyph 55 done, written 5493 of 9025 bytes");
s.write("font1.i", [0,129,1,13,128,26,8,60,61,9,128,5,29,63,45,128,2,23,63,51,1,128,3,12,62,58,5,128,3,42,63,34,128,2,2,54,63,18,128,4,4,56,63,16,0,38,63,36,128,6,15,63,56,25,63,53,2,128,7,33,191,2,62,11,128,8,1,59,63,38,128,9,30,191,2,61,10,128,7,13,62,57,30,63,51,1,128,5,3,55,63,17,0,42,63,35,128,5,40,63,34,128,2,4,56,63,18,128,3,22,63,51,1,128,3,15,63,58,5,0,8,188,2,9,128,5,31,63,45,128,53], 5493, 9025);
console.log("font1.i glyph 56 done, written 5624 of 9025 bytes");
s.write("font1.i", [0,100,1,12,128,24,29,63,46,128,6,28,63,42,1,52,63,21,128,4,6,188,2,6,0,14,63,56,2,128,3,42,63,27,128,3,37,63,34,128,2,17,63,50,128,4,3,57,62,10,1,54,63,12,128,5,22,63,47,31,63,36,128,7,46,191,2,57,3,128,7,8,61,63,21,128,9,52,63,3,128,9,52,63,3,128,9,52,63,3,128,9,52,63,3,128,9,52,63,3,128,52], 5624, 9025);
console.log("font1.i glyph 57 done, written 5726 of 9025 bytes");
s.write("font1.i", [0,81,1,11,128,23,56,191,8,39,0,40,174,6,191,2,31,128,7,28,63,51,1,128,6,12,62,61,10,128,6,3,54,63,25,128,7,39,63,42,128,7,22,63,56,4,128,6,8,60,63,14,128,6,1,49,63,31,128,7,33,63,48,128,7,16,63,59,7,128,7,57,63,56,173,6,31,1,191,9,44,128,44], 5726, 9025);
console.log("font1.i glyph 58 done, written 5809 of 9025 bytes");
s.write("font1.i", [0,90,1,6,128,6,3,166,4,13,6,63,47,164,2,12,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,24,128,3,6,63,25,129,2,0,6,191,4,22,1,142,4,5,128,6], 5809, 9025);
console.log("font1.i glyph 59 done, written 5901 of 9025 bytes");
s.write("font1.i", [0,86,1,9,128,9,26,56,27,128,6,6,62,55,128,7,42,63,18,128,6,15,63,44,128,7,53,63,7,128,6,27,63,33,128,6,3,60,58,1,128,6,38,63,22,128,6,11,63,48,128,7,49,63,11,128,6,22,63,37,128,6,1,58,60,3,128,6,34,63,26,128,6,8,63,52,128,7,45,63,15,128,6,9,21,10,128,18], 5901, 9025);
console.log("font1.i glyph 60 done, written 5989 of 9025 bytes");
s.write("font1.i", [0,90,1,6,128,6,5,166,4,11,5,164,2,41,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,128,3,10,63,19,0,129,2,12,63,19,9,191,4,19,2,142,4,4,128,6], 5989, 9025);
console.log("font1.i glyph 61 done, written 6081 of 9025 bytes");
s.write("font1.i", [0,47,1,8,128,19,32,63,22,128,4,6,61,42,55,1,128,3,39,45,2,57,27,128,2,11,62,12,0,25,58,3,0,45,42,128,2,1,54,33,0,13,4,128,3,7,11,128,88], 6081, 9025);
console.log("font1.i glyph 62 done, written 6130 of 9025 bytes");
s.write("font1.i", [0,14,1,12,128,192,24,173,10,8,20,167,10,7,128,12], 6130, 9025);
console.log("font1.i glyph 63 done, written 6146 of 9025 bytes");
s.write("font1.i", [0,22,1,4,128,4,16,32,4,0,9,55,46,128,2,5,51,36,128,2,1,3,128,56], 6146, 9025);
console.log("font1.i glyph 64 done, written 6170 of 9025 bytes");
s.write("font1.i", [0,96,1,9,128,46,9,34,53,61,54,36,3,128,2,37,62,47,39,51,63,49,128,2,134,2,128,3,43,63,19,128,3,130,2,0,21,63,31,0,15,50,191,2,53,45,63,37,11,61,58,35,22,30,43,63,37,34,63,21,128,3,10,63,37,39,63,13,128,3,35,63,37,21,63,51,23,19,37,60,63,37,0,31,61,191,2,47,16,63,37,128,2,2,10,3,128,31], 6170, 9025);
console.log("font1.i glyph 65 done, written 6268 of 9025 bytes");
s.write("font1.i", [0,122,1,10,128,10,7,12,1,128,7,39,63,9,128,7,39,63,9,128,7,39,63,9,128,7,39,63,9,23,47,60,49,22,128,2,39,63,37,62,48,47,61,63,30,0,39,63,60,14,128,2,11,57,62,8,39,63,32,128,4,26,63,31,39,63,15,128,4,9,63,41,39,63,13,128,4,7,63,43,39,63,25,128,4,18,63,34,39,63,54,3,128,2,1,49,63,16,39,63,50,53,28,27,51,63,44,0,39,63,10,39,60,63,62,37,1,128,5,1,10,1,128,33], 6268, 9025);
console.log("font1.i glyph 66 done, written 6392 of 9025 bytes");
s.write("font1.i", [0,81,1,9,128,47,6,38,54,59,45,18,128,2,13,58,63,51,46,60,63,20,2,54,62,19,128,2,5,30,0,24,63,33,128,6,37,63,13,128,6,40,63,10,128,6,28,63,24,128,6,7,60,56,5,128,3,13,128,2,24,63,57,31,26,46,63,22,128,2,16,53,191,2,59,34,1,128,4,4,9,128,30], 6392, 9025);
console.log("font1.i glyph 67 done, written 6475 of 9025 bytes");
s.write("font1.i", [0,127,1,11,128,19,6,12,2,128,8,34,63,14,128,8,34,63,14,128,8,34,63,14,128,2,3,36,54,57,41,9,34,63,14,0,2,53,63,57,44,54,57,43,63,14,0,31,63,42,1,128,2,35,191,2,14,0,56,60,4,128,3,1,55,63,14,2,63,48,128,5,40,63,14,4,63,46,128,5,38,63,14,0,59,57,128,5,50,63,14,0,41,63,26,128,3,18,191,2,14,0,7,61,63,39,24,35,61,52,63,14,128,2,11,51,191,2,55,20,34,63,14,128,4,5,7,128,38], 6475, 9025);
console.log("font1.i glyph 68 done, written 6604 of 9025 bytes");
s.write("font1.i", [0,93,1,10,128,52,1,31,51,60,49,26,128,3,1,49,63,62,47,56,63,37,128,2,31,63,41,5,0,1,42,63,11,0,58,60,5,128,3,10,63,38,6,63,57,172,5,61,48,8,63,59,180,6,45,0,60,57,1,128,7,39,63,26,128,3,4,10,128,2,4,57,63,39,26,35,57,59,6,128,2,5,42,62,191,2,52,19,128,5,1,10,3,128,33], 6604, 9025);
console.log("font1.i glyph 69 done, written 6699 of 9025 bytes");
s.write("font1.i", [0,79,1,6,128,8,2,22,21,3,0,1,57,63,62,35,0,20,63,31,131,2,0,32,63,15,128,2,44,56,63,52,49,21,48,58,63,55,53,23,0,32,63,15,128,3,32,63,15,128,3,32,63,15,128,3,32,63,15,128,3,32,63,15,128,3,32,63,15,128,3,32,63,15,128,3,32,63,15,128,26], 6699, 9025);
console.log("font1.i glyph 70 done, written 6780 of 9025 bytes");
s.write("font1.i", [0,134,1,11,128,57,6,41,184,2,40,8,31,49,7,0,7,58,63,55,44,54,56,48,63,9,0,42,63,36,128,3,33,191,2,9,0,60,58,1,128,4,55,63,9,6,63,47,128,5,43,63,9,1,63,53,128,5,49,63,9,0,51,63,17,128,3,14,191,2,9,0,17,63,61,33,21,31,60,57,63,9,128,2,22,59,191,2,61,24,40,63,9,128,3,1,12,13,1,0,47,63,3,128,2,16,128,4,15,62,51,128,2,15,63,50,36,35,53,63,62,12,128,3,22,49,60,63,59,43,9,128,7,3,128,5], 6780, 9025);
console.log("font1.i glyph 71 done, written 6916 of 9025 bytes");
s.write("font1.i", [0,113,1,10,128,10,2,12,6,128,7,13,63,35,128,7,13,63,35,128,7,13,63,35,128,7,13,63,35,16,46,60,51,20,128,2,13,63,50,61,55,51,191,2,19,0,13,63,62,19,128,2,23,63,50,0,13,63,42,128,3,1,58,61,0,13,63,35,128,4,46,63,1,13,63,35,128,4,46,63,1,13,63,35,128,4,46,63,1,13,63,35,128,4,46,63,1,13,63,35,128,4,46,63,1,13,63,35,128,4,46,63,1,128,40], 6916, 9025);
console.log("font1.i glyph 72 done, written 7031 of 9025 bytes");
s.write("font1.i", [0,46,1,3,128,3,15,26,0,50,63,8,12,23,128,4,35,49,2,46,63,3,46,63,3,46,63,3,46,63,3,46,63,3,46,63,3,46,63,3,46,63,3,46,63,3,128,12], 7031, 9025);
console.log("font1.i glyph 73 done, written 7079 of 9025 bytes");
s.write("font1.i", [0,87,1,5,128,7,2,28,10,128,2,18,63,40,128,2,1,25,8,128,7,10,49,27,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,14,63,35,128,2,16,63,34,9,24,47,63,15,26,63,61,39,128,2,8,4,128,2], 7079, 9025);
console.log("font1.i glyph 74 done, written 7168 of 9025 bytes");
s.write("font1.i", [0,112,1,9,128,9,8,12,128,7,46,63,2,128,6,46,63,2,128,6,46,63,2,128,6,46,63,2,128,3,36,49,20,46,63,2,128,2,35,63,39,0,46,63,2,0,29,63,44,128,2,46,63,2,23,63,49,2,128,2,46,63,21,62,58,4,128,3,46,63,62,191,2,21,128,3,46,63,57,16,60,59,7,128,2,46,63,11,0,22,63,48,128,2,46,63,2,128,2,40,63,31,0,46,63,2,128,2,3,54,63,14,128,36], 7168, 9025);
console.log("font1.i glyph 75 done, written 7282 of 9025 bytes");
s.write("font1.i", [0,48,1,3,128,3,8,12,0,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,45,63,3,128,12], 7282, 9025);
console.log("font1.i glyph 76 done, written 7332 of 9025 bytes");
s.write("font1.i", [0,142,1,15,128,75,35,49,8,42,58,48,22,0,11,42,58,53,24,128,2,46,63,53,59,49,191,2,23,55,59,49,191,2,22,0,46,63,42,2,0,18,191,2,41,1,0,18,63,52,0,46,63,14,128,3,56,63,14,128,3,56,62,1,46,63,3,128,3,44,63,3,128,3,44,63,3,46,63,3,128,3,44,63,3,128,3,44,63,3,46,63,3,128,3,44,63,3,128,3,44,63,3,46,63,3,128,3,44,63,3,128,3,44,63,3,46,63,3,128,3,44,63,3,128,3,44,63,3,46,63,3,128,3,44,63,3,128,3,44,63,3,128,60], 7332, 9025);
console.log("font1.i glyph 77 done, written 7476 of 9025 bytes");
s.write("font1.i", [0,93,1,10,128,50,10,49,28,16,46,60,51,20,128,2,13,63,51,62,54,51,191,2,19,0,13,191,2,21,128,2,23,63,50,0,13,63,45,128,3,1,58,61,0,13,63,36,128,4,46,63,1,13,63,36,128,4,46,63,1,13,63,36,128,4,46,63,1,13,63,36,128,4,46,63,1,13,63,36,128,4,46,63,1,13,63,36,128,4,46,63,1,128,40], 7476, 9025);
console.log("font1.i glyph 78 done, written 7571 of 9025 bytes");
s.write("font1.i", [0,101,1,11,128,57,6,38,54,59,45,18,128,4,13,58,63,51,46,60,63,33,128,2,2,54,61,19,128,2,6,50,63,17,0,24,63,32,128,4,9,62,48,0,37,63,12,128,5,52,60,0,40,63,9,128,5,49,62,1,28,63,23,128,4,3,60,52,0,7,60,56,5,128,3,37,63,28,128,2,24,63,57,31,26,46,63,48,128,4,16,53,191,2,59,33,1,128,6,4,9,128,38], 7571, 9025);
console.log("font1.i glyph 79 done, written 7674 of 9025 bytes");
s.write("font1.i", [0,126,1,11,128,55,5,49,32,6,39,184,2,40,5,128,2,7,63,47,53,56,44,55,63,56,6,0,7,191,2,41,1,128,2,36,63,38,0,7,63,60,3,128,3,1,56,62,0,7,63,47,128,5,41,63,9,7,63,45,128,5,39,63,11,7,63,56,128,5,50,63,2,7,191,2,25,128,3,19,63,48,0,7,63,53,60,38,24,36,190,2,13,0,7,63,41,15,54,191,2,54,14,128,2,7,63,41,128,2,134,2,128,4,7,63,41,128,8,7,63,41,128,9,6,3,128,8], 7674, 9025);
console.log("font1.i glyph 80 done, written 7802 of 9025 bytes");
s.write("font1.i", [0,116,1,10,128,52,17,47,59,49,28,2,49,35,0,24,63,62,49,47,61,37,63,46,4,59,61,14,128,2,10,57,63,46,24,63,33,128,4,25,63,46,34,63,16,128,4,8,63,46,36,63,14,128,4,6,63,46,27,63,25,128,4,18,63,46,10,63,55,3,128,2,1,49,63,46,0,37,63,54,29,27,50,51,63,46,128,2,32,61,63,61,43,5,63,46,128,4,9,2,0,2,63,46,128,7,2,63,46,128,7,2,63,46,128,8,6,4], 7802, 9025);
console.log("font1.i glyph 81 done, written 7920 of 9025 bytes");
s.write("font1.i", [0,57,1,6,128,30,30,49,8,20,44,36,39,63,30,63,52,27,39,63,61,18,128,2,39,63,30,128,3,39,63,12,128,3,39,63,10,128,3,39,63,10,128,3,39,63,10,128,3,39,63,10,128,3,39,63,10,128,27], 7920, 9025);
console.log("font1.i glyph 82 done, written 7979 of 9025 bytes");
s.write("font1.i", [0,88,1,9,128,47,26,53,61,53,37,7,128,2,26,63,57,43,51,63,46,128,2,49,62,5,128,2,13,10,128,2,49,63,26,1,128,5,19,62,63,57,32,6,128,4,9,37,58,63,62,26,128,5,1,20,190,2,2,0,16,3,128,3,44,63,7,6,61,57,34,23,34,62,54,128,2,17,50,191,3,50,10,128,4,2,10,6,128,30], 7979, 9025);
console.log("font1.i glyph 83 done, written 8069 of 9025 bytes");
s.write("font1.i", [0,71,1,7,128,16,31,23,128,5,63,47,128,5,63,47,128,3,20,49,63,60,49,46,0,21,53,63,61,53,49,128,3,63,47,128,5,63,47,128,5,63,47,128,5,63,47,128,5,63,47,128,5,62,50,128,5,43,63,30,31,128,3,14,53,63,53,6,128,4,7,128,23], 8069, 9025);
console.log("font1.i glyph 84 done, written 8142 of 9025 bytes");
s.write("font1.i", [0,86,1,9,128,45,36,49,128,4,14,49,24,47,63,128,4,18,63,31,47,63,128,4,18,63,31,47,63,128,4,18,63,31,47,63,128,4,18,63,31,47,63,128,4,18,63,31,46,63,7,128,3,21,63,31,36,63,28,128,3,51,63,31,12,63,62,39,29,51,59,63,31,0,22,59,63,62,44,22,63,31,128,3,9,2,128,31], 8142, 9025);
console.log("font1.i glyph 85 done, written 8230 of 9025 bytes");
s.write("font1.i", [0,86,1,11,128,56,45,46,1,128,4,28,49,16,0,37,63,19,128,4,57,60,2,0,11,63,43,128,3,17,63,36,128,3,49,62,5,128,2,41,63,11,128,3,22,63,27,0,3,61,49,128,4,1,58,52,0,25,63,23,128,5,34,63,12,48,59,2,128,5,8,63,45,63,36,128,7,46,191,2,10,128,7,20,63,49,128,48], 8230, 9025);
console.log("font1.i glyph 86 done, written 8318 of 9025 bytes");
s.write("font1.i", [0,135,1,15,128,75,17,49,22,128,3,16,49,20,128,3,19,49,20,5,63,45,128,3,39,63,44,128,3,41,63,8,0,47,61,2,128,2,58,62,61,2,128,2,58,52,128,2,27,63,18,0,15,63,34,63,20,0,14,63,31,128,2,7,63,37,0,35,61,3,58,40,0,32,63,11,128,3,50,56,0,55,44,0,39,59,1,51,54,128,4,29,63,22,63,24,0,19,63,23,63,34,128,4,9,63,57,63,5,0,2,61,57,63,13,128,5,52,63,48,128,3,44,63,56,128,6,32,63,28,128,3,24,63,36,128,63], 8318, 9025);
console.log("font1.i glyph 87 done, written 8455 of 9025 bytes");
s.write("font1.i", [0,89,1,10,128,50,6,48,43,1,128,3,42,48,6,0,31,63,33,128,2,31,63,30,128,3,49,63,142,2,63,49,128,4,8,60,183,2,60,8,128,5,24,191,2,23,128,6,19,191,2,21,128,5,6,59,185,2,59,7,128,4,46,63,144,2,63,47,128,3,29,63,34,128,2,34,63,30,0,12,62,50,1,128,2,1,50,62,13,128,40], 8455, 9025);
console.log("font1.i glyph 88 done, written 8546 of 9025 bytes");
s.write("font1.i", [0,106,1,10,128,50,19,49,25,128,4,1,46,43,4,61,54,128,4,18,63,34,0,40,63,14,128,3,41,63,9,0,14,63,39,128,2,3,61,48,128,3,51,60,3,0,24,63,23,128,3,26,63,24,0,47,60,2,128,3,3,60,49,7,63,38,128,5,37,63,39,63,13,128,5,12,191,2,53,128,7,49,63,28,128,7,49,62,5,128,4,15,19,34,63,30,128,5,43,63,62,42,128,7,9,4,128,6], 8546, 9025);
console.log("font1.i glyph 89 done, written 8654 of 9025 bytes");
s.write("font1.i", [0,59,1,8,128,40,24,177,6,47,29,187,4,61,63,58,128,4,1,50,63,19,128,4,38,63,33,128,4,23,63,47,128,4,11,61,56,5,128,3,3,55,62,14,128,4,44,63,27,128,4,27,63,61,167,5,38,191,7,128,32], 8654, 9025);
console.log("font1.i glyph 90 done, written 8715 of 9025 bytes");
s.write("font1.i", [0,87,1,7,128,12,130,2,128,3,19,51,63,22,128,2,12,63,41,11,128,3,29,63,1,128,4,35,59,128,5,34,59,128,5,35,59,128,5,50,49,128,3,11,54,60,18,128,3,12,56,59,17,128,5,51,49,128,5,35,59,128,5,34,59,128,5,35,59,128,5,29,63,10,128,4,8,61,50,23,5,128,3,10,39,54,20,128,7], 8715, 9025);
console.log("font1.i glyph 91 done, written 8804 of 9025 bytes");
s.write("font1.i", [0,54,1,3,128,3,5,56,12,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,5,63,14,1,21,4,128,6], 8804, 9025);
console.log("font1.i glyph 92 done, written 8860 of 9025 bytes");
s.write("font1.i", [0,90,1,6,128,6,4,128,5,43,60,43,8,128,2,3,18,54,53,128,4,22,63,8,128,3,16,63,13,128,3,17,63,13,128,3,17,63,14,128,3,7,63,29,128,4,36,63,46,128,3,33,63,48,128,2,6,63,30,128,3,17,63,14,128,3,17,63,13,128,3,17,63,13,128,3,32,63,7,0,12,30,59,48,128,2,39,50,31,3,128,8], 8860, 9025);
console.log("font1.i glyph 93 done, written 8952 of 9025 bytes");
s.write("font1.i", [0,31,1,7,128,44,1,128,2,2,128,2,41,62,37,3,45,23,13,55,22,54,62,60,3,8,15,0,2,20,4,128,64], 8952, 9025);
console.log("font1.i glyph 94 done, written 8985 of 9025 bytes");
s.write("font1.i", [0,38,1,6,128,3,1,128,3,13,46,61,40,7,0,50,44,19,51,37,5,63,13,0,26,57,0,47,48,26,54,35,0,9,39,56,33,4,128,78], 8985, 9025);
console.log("font1.i glyph 95 done, written 9025 of 9025 bytes");
console.log("Upload font1.i done", s.getFree(), "memory left");

s.erase("icon-timer.i");
s.write("icon-timer.i", [16,51,1,95,128,46,2,6,1,128,92,8,145,2,14,9,5,128,89,13,145,6,13,8,3,128,69,1,5,128,13,1,145,10,16,12,7,2,128,64,8,16,17,2,128,12,5,145,14,15,10,6,1,128,58,5,15,145,3,11,128,12,10,145,3,139,2,13,145,12,14,9,4,128,53,3,13,145,6,4,128,11,14,145,3,10,128,2,6,10,11,15,145,12,12,8,3,128,47,1,10,145,8,14,128,10,2,145,3,16,2,0,4,128,4,8,139,2,16,145,11,16,11,6,2,128,42,7,16,145,10,6,128,9,6,145,3,12,0,10,63,51,34,16,2,128,3,2,9,11,12,145,12,15,10,4,128,37,4,14,145,6,11,7,11,145,3,16,1,128,8,11,145,3,11,0,27,191,4,61,46,29,12,128,4,4,10,11,14,145,10,8,128,35,2,12,145,6,13,10,128,2,6,16,145,3,9,128,8,16,145,3,9,0,44,191,8,58,42,24,7,128,4,6,139,2,15,145,6,4,128,33,1,9,145,6,15,11,1,0,3,7,0,11,145,4,2,128,6,3,145,3,15,128,2,48,191,12,54,37,20,4,128,4,8,11,145,3,16,128,33,6,16,145,6,11,4,128,2,23,57,48,0,2,14,145,3,12,128,6,8,145,3,11,128,3,5,21,39,56,191,12,50,32,15,1,0,11,145,3,12,128,31,4,14,145,6,12,8,128,2,14,50,191,3,21,0,10,145,4,4,128,5,12,145,3,15,11,10,6,128,4,9,26,43,59,191,11,13,0,11,145,3,7,128,29,2,11,145,6,14,10,128,2,7,41,191,5,56,2,0,12,145,3,14,128,5,16,145,7,1,6,12,3,128,4,13,30,48,62,191,6,59,0,1,16,145,3,2,128,28,8,145,6,16,11,2,0,2,31,61,191,5,61,32,2,0,9,145,4,10,9,12,14,16,145,7,16,128,2,28,31,26,20,12,1,128,3,2,18,35,52,191,3,42,0,9,145,3,15,128,27,6,15,145,6,11,6,128,2,21,56,191,6,42,7,128,2,10,14,145,16,10,0,5,160,5,30,24,18,9,128,4,6,22,40,21,0,11,145,3,10,128,25,3,13,145,6,12,9,128,2,12,48,191,6,51,15,128,2,8,12,145,12,15,14,13,142,3,3,0,13,160,9,29,22,16,5,128,5,12,145,3,6,128,23,1,10,145,6,14,10,128,2,5,38,191,6,58,25,128,2,4,6,2,16,145,5,15,12,9,6,3,128,10,2,6,10,16,23,30,160,6,23,0,1,11,10,2,3,145,4,1,128,22,1,16,145,5,16,11,3,0,1,28,60,191,5,62,35,3,0,1,18,29,6,0,7,145,2,12,8,3,128,6,1,5,10,14,13,11,10,7,1,128,6,5,13,23,31,160,2,14,0,4,145,2,16,13,145,3,14,128,24,11,145,4,11,6,128,2,18,54,191,6,45,9,128,2,14,27,160,2,24,128,2,5,1,128,3,2,16,28,39,50,59,191,9,57,49,41,28,14,1,128,3,2,12,24,5,0,9,145,7,9,128,24,2,145,4,11,128,2,44,191,6,53,18,128,2,8,24,160,3,30,18,2,128,3,11,29,47,62,191,19,62,49,30,9,128,5,16,145,7,4,128,25,8,145,3,16,6,0,36,191,4,59,27,1,0,3,21,31,160,2,31,18,3,128,2,4,28,53,191,27,53,31,6,128,2,1,9,16,145,5,1,128,26,15,145,3,11,0,4,58,191,2,37,5,128,2,17,29,160,2,31,19,3,128,2,12,42,62,191,31,62,41,13,128,2,1,10,145,4,13,1,128,25,6,145,4,9,0,26,47,11,128,2,11,26,160,3,26,7,128,2,11,43,191,11,58,47,36,28,23,18,142,2,15,16,19,26,33,41,51,62,191,10,47,13,128,2,3,13,145,3,15,4,128,25,13,145,3,13,128,4,6,4,6,31,32,31,16,128,2,6,42,191,9,57,40,22,6,128,15,2,15,29,48,191,9,41,8,128,2,8,145,4,7,128,24,3,145,4,11,0,2,11,15,2,0,20,28,6,128,2,25,60,191,7,60,37,13,128,4,1,8,14,19,22,25,27,28,27,26,24,20,16,12,5,128,4,5,25,47,191,7,62,29,128,2,3,14,145,3,11,1,128,23,10,145,3,15,10,14,145,2,8,0,130,2,0,8,47,191,7,52,23,2,128,2,1,10,20,30,164,15,33,25,16,5,128,3,10,38,61,191,6,48,8,128,2,12,145,3,14,1,128,22,1,16,145,8,2,128,2,18,60,191,6,53,21,128,3,9,23,35,164,22,29,17,3,128,2,4,35,62,191,5,61,22,128,2,9,145,3,13,128,23,8,145,7,7,128,2,31,191,6,59,24,128,2,1,15,31,164,27,35,23,8,128,2,8,41,191,6,33,128,2,6,145,3,12,128,23,15,145,5,7,0,1,43,191,6,42,5,128,2,14,32,164,32,25,6,128,2,18,57,191,5,43,2,0,6,145,3,11,128,22,5,145,4,7,0,1,45,191,5,59,19,128,2,9,31,164,35,35,22,2,0,4,41,191,5,49,2,0,6,145,3,10,128,21,9,145,3,7,0,2,46,191,5,52,8,0,2,21,164,39,32,10,128,2,25,62,191,4,48,2,0,7,145,3,9,128,19,4,145,3,10,0,1,47,191,5,42,2,0,7,32,164,42,22,1,0,16,59,191,4,47,2,0,9,145,3,4,128,17,1,16,145,2,13,128,2,39,191,5,37,128,2,13,35,164,7,35,164,36,28,3,0,9,56,191,4,42,128,2,13,145,2,15,1,128,16,12,145,2,15,1,0,28,191,5,36,128,2,20,164,7,29,9,0,2,17,35,164,34,32,7,0,8,57,191,4,30,0,1,15,145,2,10,128,15,6,145,3,4,0,18,191,5,35,128,2,21,164,7,31,1,128,4,13,164,35,33,7,0,9,57,191,4,18,0,3,145,3,5,128,13,1,16,145,2,10,0,4,58,191,4,44,128,2,22,164,8,16,0,13,51,38,2,0,26,164,35,33,7,0,11,61,191,3,59,6,0,9,145,2,15,1,128,12,10,145,2,15,128,2,42,191,4,52,2,0,19,164,9,11,0,36,181,2,28,0,6,35,164,35,33,5,0,21,191,4,44,128,2,15,145,2,11,128,11,3,145,3,5,0,22,191,4,59,7,0,13,164,10,18,0,18,181,2,51,7,0,21,164,36,30,2,0,34,191,4,22,0,4,145,3,3,128,10,12,145,2,13,0,3,58,191,4,22,0,8,35,164,10,31,1,0,41,181,2,36,0,2,33,164,36,24,128,2,50,191,3,58,4,0,12,145,2,11,128,9,3,145,3,3,0,33,191,4,42,0,1,31,164,12,17,0,11,181,3,13,0,15,164,37,16,0,11,62,191,3,36,0,3,145,3,3,128,8,11,145,2,11,0,6,61,191,3,58,4,0,21,164,13,34,3,0,33,181,2,44,0,1,34,164,36,34,5,0,32,191,3,62,7,0,11,145,2,12,128,7,2,145,3,3,0,38,191,4,27,0,9,164,15,23,0,5,50,181,2,11,0,28,164,37,27,0,1,54,191,3,38,0,2,145,3,2,128,6,9,145,2,13,0,5,62,191,3,55,1,0,29,164,15,35,8,0,19,51,43,1,0,31,164,38,14,0,22,191,3,62,8,0,12,145,2,9,128,6,15,145,2,5,0,31,191,4,21,0,13,164,17,29,1,0,3,1,0,12,164,29,35,21,138,2,21,35,164,4,32,1,0,53,191,3,34,0,5,145,2,15,128,5,5,145,2,15,0,1,57,191,3,55,0,1,32,164,18,26,5,0,1,13,34,164,28,24,4,128,4,12,35,164,4,15,0,20,191,3,58,1,0,15,145,2,5,128,4,10,145,2,10,0,20,191,4,28,0,13,164,20,35,33,34,164,28,29,9,128,2,9,35,33,2,0,27,164,4,32,1,0,55,191,3,20,0,9,145,2,11,128,4,16,145,2,4,0,41,191,3,60,3,0,29,164,49,34,14,128,2,3,31,52,181,2,24,0,19,164,5,13,0,31,191,3,45,0,2,145,2,16,128,3,3,145,2,16,0,1,60,191,3,39,0,8,164,49,34,7,128,2,22,49,181,3,51,9,0,22,164,5,27,0,7,191,3,62,3,0,15,145,2,4,128,2,8,145,2,10,0,18,191,4,18,0,22,164,49,21,0,5,44,181,4,38,8,0,3,34,164,6,5,0,46,191,3,20,0,10,145,2,9,128,2,12,145,2,6,0,37,191,3,60,1,0,33,164,49,13,0,32,181,3,45,16,128,2,5,30,164,7,17,0,27,191,3,38,0,5,145,2,13,128,2,16,145,2,2,0,51,191,3,42,0,8,164,6,35,18,4,1,4,13,23,32,164,36,17,0,17,52,50,24,1,0,1,19,35,164,8,28,0,9,191,3,55,0,1,145,3,0,2,145,2,16,0,2,62,191,3,26,0,19,164,6,11,128,7,6,16,25,34,164,32,30,1,0,5,2,128,2,13,32,164,10,35,2,0,55,191,3,5,0,15,145,2,3,6,145,2,12,0,15,191,4,12,0,27,164,5,26,0,4,49,63,52,35,18,2,128,4,9,18,28,35,164,29,26,4,128,2,9,28,164,13,11,0,39,191,3,16,0,12,145,2,6,8,145,2,9,0,27,191,3,61,128,2,34,164,5,18,0,31,191,5,62,47,30,13,128,4,2,11,21,31,164,27,35,31,33,164,15,19,0,28,191,3,28,0,9,145,2,9,10,145,2,7,0,35,191,3,49,0,6,164,6,17,0,30,191,9,59,43,26,9,128,4,4,14,24,33,164,2,35,23,12,8,10,16,29,164,32,25,0,17,191,3,39,0,6,145,2,11,12,145,2,5,0,42,191,3,41,0,11,164,6,28,0,2,43,191,12,55,38,21,4,128,4,7,16,5,128,6,14,35,164,30,31,0,6,191,3,47,0,4,145,2,13,14,145,2,3,0,50,191,3,34,0,16,164,7,14,128,2,4,20,37,54,191,12,51,34,17,1,128,3,11,37,48,45,23,128,2,15,164,31,128,2,62,191,2,52,0,3,145,2,14,15,145,2,1,0,56,191,3,26,0,20,164,7,35,22,5,128,4,7,25,42,58,191,11,61,46,157,2,62,191,4,50,2,0,22,164,30,3,0,57,191,2,56,0,1,145,2,144,2,145,2,1,0,58,191,3,22,0,23,164,10,31,21,12,2,128,4,12,29,46,61,191,17,40,0,5,164,30,6,0,52,191,2,61,128,2,145,3,16,145,2,1,0,59,191,3,20,0,24,164,13,35,28,19,9,1,128,3,1,17,34,51,191,14,62,3,0,31,164,29,8,0,48,191,3,128,2,145,6,128,2,61,191,3,19,0,25,164,17,34,26,16,7,128,4,5,21,38,56,191,11,12,0,27,164,29,8,0,48,191,2,62,128,2,145,3,16,145,2,128,2,61,191,3,18,0,25,164,21,33,23,14,4,128,4,9,26,53,191,8,8,0,29,164,29,7,0,49,191,2,61,128,2,145,2,16,15,145,2,1,0,57,191,3,21,0,23,164,25,30,21,11,2,128,2,20,191,7,50,0,1,34,164,29,7,0,51,191,2,59,0,1,145,2,16,15,145,2,3,0,52,191,3,26,0,21,164,28,35,27,1,0,44,191,5,61,15,0,14,164,30,5,0,53,191,2,56,0,1,145,2,16,14,145,2,4,0,47,191,3,30,0,18,164,30,19,0,1,34,60,191,2,49,13,0,3,32,164,30,1,0,61,191,2,49,0,3,145,2,14,11,145,2,5,0,42,191,3,36,0,14,164,31,16,128,2,1,6,5,128,2,5,31,164,30,32,0,4,191,3,41,0,5,145,2,12,9,145,2,8,0,31,191,3,47,0,8,164,32,25,9,128,3,2,15,33,164,31,28,0,12,191,3,33,0,8,145,2,9,7,145,2,11,0,20,191,3,58,0,2,164,34,34,30,31,35,164,33,21,0,22,191,3,24,0,10,145,2,7,4,145,2,14,0,9,191,4,5,0,31,164,13,32,17,9,12,26,164,52,13,0,36,191,3,10,0,13,145,2,5,1,145,3,128,2,61,191,3,18,0,22,164,11,34,18,1,128,4,23,164,51,5,0,50,191,2,60,128,2,145,3,1,0,14,145,2,3,0,45,191,3,36,0,12,164,10,24,4,128,2,17,39,23,0,2,35,164,49,32,0,2,62,191,2,47,0,3,145,2,15,128,2,10,145,2,8,0,27,191,3,54,0,2,35,164,7,30,8,128,2,10,40,181,3,7,0,30,164,49,21,0,20,191,3,31,0,7,145,2,11,128,2,6,145,2,13,0,9,191,4,8,0,27,164,6,29,2,0,4,31,52,181,3,43,1,0,33,164,49,9,0,40,191,3,11,0,12,145,2,7,128,2,1,145,3,1,0,55,191,3,30,0,13,164,6,10,0,15,50,181,3,52,29,3,0,12,164,49,33,0,1,59,191,2,54,0,1,145,3,2,128,3,13,145,2,6,0,31,191,3,55,0,1,34,164,5,3,0,48,181,3,37,7,128,2,12,34,164,49,18,0,19,191,3,34,0,6,145,2,13,128,4,8,145,2,13,0,7,191,4,16,0,21,164,5,6,0,32,53,44,15,128,2,5,25,164,50,35,3,0,47,191,3,11,0,12,145,2,8,128,4,2,145,3,2,0,45,191,3,43,0,4,35,164,4,21,128,2,7,128,2,2,20,35,164,27,34,20,11,13,27,164,19,23,0,10,191,3,47,0,1,145,3,2,128,5,12,145,2,9,0,20,191,4,11,0,21,164,5,18,1,0,1,14,33,164,28,34,7,128,4,23,164,17,35,5,0,38,191,3,20,0,8,145,2,13,128,6,5,145,2,15,128,2,52,191,3,43,0,3,34,164,5,34,31,34,164,30,20,0,5,36,22,0,1,31,164,16,21,0,9,62,191,2,56,128,2,15,145,2,5,128,7,15,145,2,7,0,20,191,4,12,0,17,164,38,12,0,34,181,2,19,0,12,164,15,34,3,0,43,191,3,24,0,6,145,2,15,128,8,7,145,2,15,128,2,51,191,3,49,128,2,29,164,37,14,0,26,181,2,47,2,0,27,164,14,14,0,14,191,3,53,128,2,15,145,2,8,128,9,15,145,2,8,0,17,191,4,27,0,7,35,164,36,27,0,2,48,181,2,27,0,6,35,164,12,25,0,1,53,191,3,18,0,7,145,2,16,1,128,9,7,145,2,16,1,0,41,191,3,60,7,0,17,164,37,11,0,19,181,2,51,6,0,21,164,11,33,3,0,34,191,3,46,128,2,16,145,2,8,128,11,15,145,2,10,0,5,58,191,3,48,128,2,24,164,36,31,128,2,42,181,2,35,0,3,35,164,9,35,9,0,15,191,3,60,7,0,9,145,2,15,128,12,5,145,3,4,0,22,191,4,35,0,1,29,164,36,16,0,11,181,3,8,0,29,164,9,14,0,6,57,191,3,24,0,3,145,3,6,128,13,11,145,2,15,128,2,41,191,4,23,0,3,31,164,35,34,3,0,32,53,50,5,0,29,164,8,19,0,2,50,191,3,44,128,2,14,145,2,13,128,14,1,16,145,2,10,0,2,52,191,3,61,15,0,4,31,164,35,23,128,2,18,10,0,6,35,164,7,19,128,2,42,191,3,54,4,0,9,145,2,16,2,128,15,6,145,3,6,0,8,59,191,3,60,14,0,4,31,164,35,17,128,3,4,29,164,7,18,128,2,39,191,3,59,9,0,5,145,3,6,128,17,11,145,3,3,0,16,62,191,3,60,13,0,2,27,164,35,30,22,24,34,164,6,35,14,128,2,40,191,3,62,17,0,3,16,145,2,12,128,19,14,145,2,15,1,0,19,62,191,3,60,19,128,2,21,164,43,32,8,0,2,42,191,4,22,0,1,15,145,2,15,1,128,19,2,16,145,2,14,1,0,20,62,191,4,29,128,2,11,33,164,40,25,3,0,7,51,191,3,62,21,128,2,13,145,2,16,2,128,21,4,145,3,14,1,0,20,61,191,4,40,3,0,3,24,164,37,33,12,128,2,16,58,191,3,62,20,0,1,13,145,3,4,128,23,6,145,3,14,1,0,13,57,191,4,56,16,128,2,9,29,164,33,35,20,2,0,2,36,191,4,58,16,0,1,13,145,3,7,128,25,6,145,3,14,2,0,7,51,191,5,37,4,128,2,12,29,164,29,35,21,3,128,2,17,55,191,4,51,7,0,1,14,145,3,7,128,27,6,145,3,16,4,0,2,38,191,5,59,29,1,128,2,8,24,35,164,24,31,17,3,128,2,12,44,191,5,40,2,0,3,15,145,3,7,128,29,6,145,4,6,128,2,17,57,191,5,56,27,3,128,2,2,13,24,34,164,18,30,20,9,128,3,11,43,191,5,57,19,128,2,6,145,4,6,128,31,4,16,145,3,11,1,0,3,38,191,6,60,36,11,128,4,7,15,23,28,32,35,164,6,35,31,25,19,12,4,128,3,2,24,49,191,6,38,3,0,1,10,145,3,16,4,128,33,2,14,145,3,15,5,128,2,10,45,191,7,54,34,13,128,7,132,2,5,6,4,2,128,6,5,23,41,60,191,6,46,13,128,2,5,15,145,3,14,2,128,35,1,10,145,4,11,2,128,2,16,46,191,8,60,47,33,21,12,5,128,7,1,6,16,27,38,52,191,8,47,14,128,2,1,11,145,4,11,128,39,5,15,145,4,9,1,128,2,10,37,61,191,11,61,56,55,53,52,55,59,191,11,60,38,13,128,2,1,9,16,145,3,15,5,128,41,1,11,145,4,16,9,1,128,2,3,22,42,61,191,23,61,46,24,2,128,2,1,9,16,145,4,10,1,128,44,3,13,145,5,11,4,128,3,1,19,33,47,60,191,15,61,51,35,17,1,128,3,4,11,145,5,14,4,128,48,5,14,145,5,15,9,4,128,5,10,19,26,34,41,43,45,46,47,44,39,34,29,20,9,128,5,3,8,15,145,5,14,5,128,52,5,13,145,6,15,11,7,3,128,17,3,6,11,16,145,6,14,6,128,56,3,10,16,145,8,14,12,9,7,6,133,2,132,2,5,6,7,9,11,14,145,8,16,10,3,128,61,5,10,16,145,25,16,11,6,128,67,3,7,11,15,145,17,15,12,8,3,128,74,1,3,6,8,10,11,140,3,13,12,11,9,8,6,4,1,128,39], 0, 4149);
console.log("icon-timer.i glyph 0 done, written 4149 of 4149 bytes");
console.log("Upload icon-timer.i done", s.getFree(), "memory left");

s.erase("big_numbers.i");
s.write("big_numbers.i", [2,108,1,44,128,19,3,10,145,2,10,3,128,34,8,30,51,60,191,6,60,52,31,9,128,28,26,50,191,14,51,27,1,128,23,13,51,191,18,52,14,128,20,2,36,191,22,37,3,128,17,3,48,191,24,50,3,128,15,3,49,191,26,50,4,128,13,3,50,191,10,60,43,35,155,2,34,42,58,191,10,51,4,128,12,41,191,9,50,23,2,128,6,1,21,48,191,9,42,128,11,20,191,8,62,29,128,12,27,62,191,8,21,128,9,4,58,191,7,59,12,128,14,11,58,191,7,58,5,128,8,40,191,7,61,14,128,16,13,61,191,7,42,128,7,7,191,8,19,128,18,18,191,8,8,128,6,33,191,7,41,128,20,41,191,7,35,128,5,2,58,191,6,60,6,128,20,6,60,191,6,59,2,128,4,24,191,7,32,128,22,32,191,7,26,128,4,44,191,7,7,128,22,8,191,7,46,128,4,59,191,6,47,128,24,48,191,6,60,128,3,10,191,7,23,128,24,25,191,7,12,128,2,25,191,7,8,128,24,9,191,7,27,128,2,40,191,6,59,128,26,60,191,6,42,128,2,48,191,6,45,128,26,47,191,6,51,128,2,53,191,6,35,128,26,37,191,6,55,128,2,58,191,6,30,128,26,32,191,6,60,128,2,62,191,6,26,128,26,28,191,7,1,3,191,7,22,128,26,24,191,7,6,5,191,7,20,128,26,22,191,7,8,1,191,7,24,128,26,26,191,7,3,0,60,191,6,28,128,26,30,191,6,62,128,2,55,191,6,33,128,26,34,191,6,58,128,2,51,191,6,39,128,26,41,191,6,53,128,2,45,191,6,52,128,26,54,191,6,48,128,2,32,191,7,2,128,24,4,191,7,35,128,2,17,191,7,15,128,24,16,191,7,20,128,2,3,191,7,35,128,24,36,191,7,5,128,3,51,191,6,58,1,128,22,1,58,191,6,53,128,4,35,191,7,19,128,22,20,191,7,37,128,4,10,191,7,48,128,22,49,191,7,12,128,5,47,191,7,22,128,20,22,191,7,49,128,6,20,191,7,57,3,128,18,3,57,191,7,22,128,7,56,191,7,45,1,128,17,44,191,7,57,1,128,7,21,191,8,39,128,16,38,191,8,22,128,9,42,191,8,42,4,128,12,3,40,191,8,44,128,10,5,58,191,8,56,17,128,10,15,55,191,8,59,5,128,11,20,191,10,53,28,9,1,128,2,1,8,26,52,191,10,21,128,13,24,191,13,57,56,191,13,25,128,15,23,191,26,24,128,17,22,61,191,22,62,23,128,19,8,46,191,20,47,9,128,22,22,58,191,16,59,24,128,25,2,20,42,61,191,10,62,43,21,2,128,29,3,21,30,37,44,51,52,45,38,31,22,3,128,16], 0, 5212);
console.log("big_numbers.i glyph 0 done, written 622 of 5212 bytes");
s.write("big_numbers.i", [1,86,1,20,128,33,21,157,5,15,128,11,6,45,191,6,33,128,10,22,59,191,7,33,128,8,5,42,191,9,33,128,7,19,58,191,10,33,128,5,3,40,191,12,33,128,4,17,56,191,13,33,128,2,2,37,191,15,33,0,15,55,191,16,33,13,191,10,38,55,191,6,33,0,49,191,7,54,16,0,52,191,6,33,0,13,191,5,62,33,2,128,2,52,191,6,33,128,2,40,191,3,50,11,128,4,52,191,6,33,128,2,6,60,61,28,128,6,52,191,6,33,128,3,20,7,128,7,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,12,52,191,6,33,128,20], 622, 5212);
console.log("big_numbers.i glyph 1 done, written 966 of 5212 bytes");
s.write("big_numbers.i", [1,163,1,36,128,16,5,12,19,16,11,5,128,25,4,28,46,53,61,191,6,58,42,25,5,128,19,16,41,62,191,13,61,38,9,128,15,14,54,191,19,33,1,128,12,31,191,22,50,8,128,9,7,48,191,24,56,7,128,7,10,59,191,26,54,5,128,5,6,56,191,10,50,39,30,21,17,26,37,48,191,10,43,128,4,3,51,191,8,62,40,12,128,8,11,47,191,9,17,128,2,1,46,191,8,47,6,128,12,19,61,191,7,53,128,2,9,58,191,7,33,128,15,24,191,8,12,128,2,8,54,191,4,62,20,128,17,39,191,7,33,128,3,4,49,191,3,22,128,18,2,61,191,6,52,128,4,2,43,63,28,128,20,42,191,6,60,128,6,20,128,21,29,191,7,2,128,27,23,191,7,8,128,27,27,191,7,3,128,27,37,191,6,58,128,28,46,191,6,50,128,27,3,60,191,6,41,128,27,30,191,7,29,128,26,2,58,191,6,61,5,128,26,28,191,7,38,128,26,13,62,191,7,10,128,25,5,57,191,7,45,128,25,1,48,191,7,61,10,128,24,1,41,191,8,26,128,24,2,45,191,8,41,128,24,3,48,191,8,48,1,128,23,5,51,191,8,53,4,128,23,10,54,191,8,52,5,128,23,18,60,191,8,51,4,128,23,29,191,9,45,3,128,22,1,40,191,9,37,128,23,5,49,191,9,27,128,23,12,56,191,8,60,18,128,23,21,61,191,8,56,11,128,23,32,191,9,50,5,128,22,2,42,191,9,41,2,128,22,7,51,191,9,32,128,23,14,58,191,8,62,22,128,23,23,62,191,8,58,14,128,23,35,191,9,53,8,128,22,3,45,191,9,45,3,128,22,9,53,191,10,50,177,22,29,39,191,34,37,39,191,34,37,39,191,34,37,39,191,34,37,39,191,34,37,39,191,34,37,128,36], 966, 5212);
console.log("big_numbers.i glyph 2 done, written 1387 of 5212 bytes");
s.write("big_numbers.i", [2,4,1,38,128,16,2,9,17,18,14,9,4,128,26,1,21,42,51,58,191,7,55,40,26,5,128,20,11,36,59,191,14,62,42,15,128,16,7,46,191,20,42,5,128,13,22,60,191,22,59,18,128,10,4,42,191,25,62,20,128,8,3,51,191,27,62,16,128,6,2,48,191,10,52,38,30,22,16,24,33,43,55,191,10,56,3,128,4,1,45,191,8,62,41,14,128,9,22,54,191,9,35,128,4,18,191,8,49,8,128,13,26,191,8,60,2,128,4,26,191,6,32,1,128,15,30,191,8,22,128,5,25,191,3,62,19,128,18,40,191,7,40,128,6,24,63,62,20,128,19,4,62,191,6,48,128,7,23,22,128,21,44,191,6,55,128,30,35,191,6,58,128,30,32,191,6,52,128,30,40,191,6,44,128,30,56,191,6,26,128,29,23,191,6,60,6,128,28,15,62,191,6,28,128,28,12,60,191,6,51,128,27,15,43,191,7,60,12,128,16,7,13,12,11,138,2,14,21,29,36,51,191,8,54,10,128,17,33,191,17,46,4,128,18,33,191,15,48,20,128,20,33,191,13,56,14,128,22,33,191,14,60,39,16,128,20,33,191,17,51,10,128,18,33,191,18,61,27,128,17,8,144,5,20,25,31,37,43,60,191,9,43,128,27,2,24,49,191,8,28,128,29,16,61,191,6,62,11,128,29,18,62,191,6,52,1,128,29,24,191,7,19,128,29,3,191,7,39,128,30,51,191,6,53,128,30,36,191,6,59,128,30,37,191,7,128,5,1,8,128,23,51,191,6,58,128,5,41,58,11,128,21,2,62,191,6,51,128,4,39,191,2,58,11,128,20,22,191,7,42,128,3,38,191,4,58,18,128,18,10,60,191,7,22,128,2,36,191,7,40,4,128,15,4,54,191,7,61,2,0,14,191,9,58,27,4,128,11,1,25,56,191,8,36,128,3,26,191,10,62,44,20,6,128,5,2,11,24,54,191,9,57,3,128,4,26,191,13,62,55,47,48,57,191,13,19,128,6,25,62,191,28,25,128,8,11,50,191,26,26,128,11,26,60,191,22,53,13,128,13,6,36,57,191,18,58,31,1,128,17,16,39,59,191,12,62,48,23,1,128,21,1,15,22,29,36,43,50,53,49,44,40,30,15,2,128,12], 1387, 5212);
console.log("big_numbers.i glyph 3 done, written 1905 of 5212 bytes");
s.write("big_numbers.i", [1,208,1,41,128,65,20,157,8,4,128,30,15,191,9,8,128,29,4,56,191,9,8,128,29,45,191,10,8,128,28,28,191,11,8,128,27,13,62,191,11,8,128,26,4,55,191,12,8,128,26,43,191,13,8,128,25,27,191,14,8,128,24,12,62,191,6,31,191,7,8,128,23,3,54,191,6,39,8,191,7,8,128,23,41,191,6,53,2,8,191,7,8,128,22,25,191,6,61,10,0,8,191,7,8,128,21,11,61,191,6,24,128,2,8,191,7,8,128,20,2,53,191,6,41,128,3,8,191,7,8,128,20,40,191,6,54,3,128,3,8,191,7,8,128,19,23,191,6,62,12,128,4,8,191,7,8,128,18,10,61,191,6,27,128,5,8,191,7,8,128,17,2,52,191,6,43,128,6,8,191,7,8,128,17,38,191,6,56,4,128,6,8,191,7,8,128,16,22,191,6,62,14,128,7,8,191,7,8,128,15,9,60,191,6,29,128,8,8,191,7,8,128,14,1,51,191,6,45,128,9,8,191,7,8,128,14,36,191,6,57,5,128,9,8,191,7,8,128,13,20,191,7,15,128,10,8,191,7,8,128,12,8,59,191,6,31,128,11,8,191,7,8,128,11,1,50,191,6,47,128,12,8,191,7,8,128,11,34,191,6,58,6,128,12,8,191,7,8,128,10,18,191,7,17,128,13,8,191,7,8,128,9,7,59,191,6,33,128,14,8,191,7,8,128,9,48,191,6,49,1,128,14,8,191,7,8,128,8,33,191,6,59,7,128,15,8,191,7,8,128,7,16,191,7,58,178,16,52,191,7,52,178,6,13,24,191,39,16,15,191,39,16,7,191,39,16,0,62,191,38,16,0,53,191,38,16,0,29,167,23,43,191,7,43,167,6,10,128,25,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,32,8,191,7,8,128,48], 1905, 5212);
console.log("big_numbers.i glyph 4 done, written 2371 of 5212 bytes");
s.write("big_numbers.i", [1,212,1,37,128,40,9,157,30,4,128,5,21,191,30,9,128,5,22,191,30,9,128,5,24,191,30,9,128,5,26,191,30,9,128,5,28,191,30,9,128,5,30,191,30,9,128,5,31,191,6,46,147,23,2,128,5,33,191,6,36,128,29,35,191,6,34,128,29,37,191,6,32,128,29,39,191,6,30,128,29,40,191,6,29,128,29,42,191,6,27,128,29,44,191,6,25,128,29,46,191,6,23,128,29,47,191,6,21,128,29,49,191,6,19,128,29,51,191,6,17,128,7,1,6,9,6,1,128,17,53,191,6,15,128,3,10,29,45,59,191,5,59,45,29,13,128,13,55,191,6,14,0,11,42,191,13,51,22,1,128,10,56,191,6,23,42,191,17,54,13,128,9,58,191,26,62,29,128,8,60,191,28,34,128,7,62,191,29,29,128,6,191,10,57,41,25,17,11,7,13,23,33,43,60,191,10,14,128,5,39,62,191,6,44,16,128,10,5,37,191,9,50,128,6,6,33,59,191,2,49,10,128,14,10,48,191,8,23,128,7,2,27,26,128,17,4,56,191,7,48,128,28,14,62,191,7,5,128,28,31,191,7,24,128,28,4,191,7,34,128,29,49,191,6,41,128,29,40,191,6,47,128,29,35,191,6,50,128,29,39,191,6,44,128,29,46,191,6,38,128,28,2,61,191,6,32,128,4,29,44,2,128,21,23,191,7,17,128,3,21,191,2,49,4,128,19,6,59,191,6,60,1,128,2,15,62,191,3,53,10,128,18,45,191,7,42,128,2,9,59,191,5,62,32,1,128,15,31,191,8,15,0,5,55,191,8,54,19,128,12,11,49,191,8,43,128,2,8,55,191,10,57,34,10,128,7,8,34,62,191,8,62,8,128,3,6,51,191,12,60,52,44,37,38,44,55,191,11,22,128,5,3,47,191,28,28,128,7,1,33,62,191,24,62,29,128,10,9,45,191,22,55,13,128,13,19,51,191,18,58,32,3,128,16,9,30,51,191,13,50,26,2,128,21,8,22,28,35,41,48,53,50,45,40,33,18,3,128,12], 2371, 5212);
console.log("big_numbers.i glyph 5 done, written 2841 of 5212 bytes");
s.write("big_numbers.i", [2,92,1,39,128,19,3,10,18,16,10,4,128,29,5,28,50,59,191,6,62,50,31,11,128,23,19,45,62,191,13,55,26,1,128,18,5,43,191,18,55,22,128,16,21,58,191,21,47,5,128,13,33,191,24,57,14,128,11,31,191,26,61,4,128,9,29,191,10,52,34,25,17,19,26,33,49,191,9,30,128,9,21,191,9,45,15,128,8,8,31,60,191,5,51,1,128,8,4,58,191,7,62,27,128,12,6,41,191,3,62,11,128,9,40,191,7,60,14,128,15,21,61,63,30,128,9,18,191,8,18,128,17,12,43,1,128,9,53,191,7,27,128,29,16,191,7,50,128,30,42,191,7,14,128,29,6,62,191,6,42,128,30,31,191,7,17,128,30,48,191,6,56,128,30,1,61,191,6,33,128,30,14,191,7,16,128,10,6,13,12,7,2,128,15,28,191,7,3,128,5,2,22,44,56,62,191,5,56,40,24,5,128,11,43,191,6,52,128,4,9,41,61,191,12,62,39,10,128,9,49,191,6,40,128,2,1,30,61,191,17,37,2,128,7,54,191,6,34,0,8,51,191,20,53,11,128,6,59,191,6,29,7,56,191,22,59,11,128,5,191,7,29,54,191,9,188,2,191,13,57,8,128,3,4,191,7,61,191,6,49,25,15,6,128,2,6,16,26,43,191,10,50,128,3,5,191,12,48,17,128,10,13,49,191,9,24,128,2,2,191,11,29,128,14,22,191,8,58,2,128,2,62,191,9,30,128,16,30,191,8,21,128,2,59,191,8,33,128,18,45,191,7,42,128,2,55,191,7,59,2,128,18,4,59,191,6,60,1,0,49,191,7,32,128,20,39,191,7,8,0,37,191,6,62,5,128,20,20,191,7,14,0,26,191,7,4,128,20,12,191,7,20,0,14,191,7,22,128,20,7,191,7,23,0,3,191,7,41,128,20,17,191,7,17,128,2,49,191,6,59,128,20,30,191,7,11,128,2,27,191,7,15,128,19,42,191,7,4,128,2,6,191,7,49,128,18,4,59,191,6,51,128,4,47,191,7,25,128,17,40,191,7,31,128,4,19,191,7,59,5,128,15,18,191,8,10,128,5,47,191,7,45,3,128,13,10,56,191,7,44,128,6,11,191,8,55,13,128,11,28,61,191,7,62,9,128,7,38,191,8,62,28,1,128,7,10,48,191,9,35,128,8,2,48,191,9,60,42,31,25,23,29,36,53,191,10,47,1,128,9,3,52,191,25,52,3,128,11,6,54,191,23,47,5,128,13,2,36,191,21,33,128,17,15,54,191,17,45,13,128,20,17,39,60,191,11,58,40,12,128,24,1,19,29,35,42,48,53,49,44,38,29,12,128,13], 2841, 5212);
console.log("big_numbers.i glyph 6 done, written 3447 of 5212 bytes");
s.write("big_numbers.i", [1,60,1,36,128,36,1,157,34,15,2,191,34,33,2,191,34,33,2,191,34,33,2,191,34,33,2,191,34,33,2,191,34,18,0,147,25,29,191,7,51,128,27,40,191,7,21,128,26,8,62,191,6,54,128,27,37,191,7,25,128,26,6,62,191,6,57,1,128,26,35,191,7,28,128,26,5,61,191,6,59,3,128,26,33,191,7,32,128,26,4,60,191,6,61,4,128,26,31,191,7,35,128,26,2,59,191,6,62,6,128,26,28,191,7,39,128,26,2,57,191,7,9,128,26,26,191,7,42,128,26,1,56,191,7,12,128,26,24,191,7,46,128,27,54,191,7,15,128,26,21,191,7,49,128,27,52,191,7,19,128,26,19,191,7,52,128,27,50,191,7,22,128,26,17,191,7,55,128,27,48,191,7,26,128,26,15,191,7,57,2,128,26,45,191,7,29,128,26,13,191,7,59,3,128,26,43,191,7,33,128,26,11,191,7,61,5,128,26,41,191,7,36,128,26,9,191,7,62,7,128,26,39,191,7,40,128,26,7,62,191,7,10,128,26,36,191,7,43,128,26,6,61,191,7,13,128,26,34,191,7,46,128,26,4,60,191,7,16,128,26,32,191,7,50,128,26,3,59,191,7,20,128,26,29,191,7,53,128,26,2,58,191,7,23,128,26,27,191,7,56,1,128,25,1,56,191,7,27,128,26,25,191,7,58,2,128,56], 3447, 5212);
console.log("big_numbers.i glyph 7 done, written 3765 of 5212 bytes");
s.write("big_numbers.i", [2,122,1,38,128,15,3,10,14,146,2,14,10,4,128,26,4,26,40,54,191,8,55,41,27,6,128,20,17,43,62,191,15,45,20,128,16,10,45,191,20,49,12,128,13,27,62,191,23,32,128,11,36,191,26,40,1,128,8,34,191,28,41,128,7,18,191,10,57,37,28,19,10,9,18,27,37,55,191,10,24,128,5,1,57,191,8,57,27,2,128,8,1,24,55,191,8,61,6,128,4,22,191,8,41,2,128,12,1,35,191,8,30,128,4,48,191,7,46,1,128,15,40,191,7,56,128,3,1,191,7,54,3,128,16,1,48,191,7,9,128,2,8,191,7,25,128,18,17,191,7,17,128,2,17,191,7,6,128,19,61,191,6,25,128,2,13,191,6,62,128,20,54,191,6,22,128,2,3,191,7,4,128,19,59,191,6,10,128,3,55,191,6,15,128,18,7,191,6,62,1,128,3,43,191,6,41,128,18,34,191,6,51,128,4,14,191,7,22,128,16,17,61,191,6,24,128,5,39,191,7,22,128,14,17,61,191,6,48,128,6,5,59,191,7,28,2,128,10,1,25,61,191,6,62,10,128,7,14,58,191,7,58,29,3,128,6,2,27,56,191,7,62,23,128,9,8,54,191,8,61,49,37,25,24,36,49,61,191,8,59,15,128,11,4,43,191,22,50,8,128,14,13,45,191,18,51,19,128,17,1,38,191,16,45,2,128,16,2,27,56,191,18,58,30,3,128,13,24,58,191,22,59,27,128,11,35,191,12,54,53,62,191,11,39,1,128,7,3,45,191,9,48,23,12,2,128,2,1,11,22,45,191,9,47,4,128,6,49,191,8,43,14,128,10,11,41,62,191,7,52,1,128,4,26,191,7,56,13,128,14,10,53,191,7,30,128,3,6,60,191,6,53,5,128,16,3,50,191,6,61,8,128,2,42,191,6,59,8,128,18,6,57,191,6,45,0,3,62,191,6,30,128,20,25,191,7,6,20,191,7,3,128,20,1,60,191,6,24,30,191,6,54,128,22,50,191,6,34,36,191,6,49,128,22,44,191,6,40,35,191,6,56,128,22,52,191,6,39,27,191,7,9,128,20,6,62,191,6,31,19,191,7,37,128,20,33,191,7,23,4,62,191,7,26,128,18,23,191,8,7,0,41,191,8,23,128,16,19,62,191,7,46,128,2,15,191,8,62,36,8,128,12,6,34,62,191,8,20,128,3,39,191,9,62,41,13,1,128,6,1,11,39,62,191,9,43,128,4,2,54,191,12,56,47,39,38,47,55,191,12,57,4,128,5,9,55,191,28,57,12,128,7,5,50,191,26,53,7,128,9,2,32,61,191,22,62,35,3,128,12,8,42,62,191,19,44,10,128,16,5,27,51,191,14,52,29,6,128,21,3,16,29,40,44,48,181,2,49,45,40,30,17,4,128,12], 3765, 5212);
console.log("big_numbers.i glyph 8 done, written 4401 of 5212 bytes");
s.write("big_numbers.i", [2,95,1,39,128,15,2,7,13,18,17,10,3,128,28,2,18,35,53,191,7,61,54,35,13,128,22,3,31,59,191,14,55,32,3,128,18,29,60,191,18,56,17,128,15,4,45,191,22,38,2,128,12,8,56,191,24,46,1,128,10,4,54,191,12,59,57,62,191,11,41,128,9,1,49,191,9,54,31,12,1,128,3,7,25,49,191,9,35,128,8,30,191,9,34,1,128,9,29,62,191,8,15,128,6,5,60,191,7,55,14,128,12,13,55,191,7,50,128,6,37,191,7,58,5,128,14,5,58,191,7,23,128,4,1,60,191,7,22,128,16,24,191,7,56,128,4,17,191,7,44,128,18,48,191,7,16,128,3,37,191,7,9,128,18,10,62,191,6,38,128,3,48,191,6,59,128,20,46,191,6,59,1,128,2,55,191,6,47,128,20,28,191,7,17,128,2,61,191,6,34,128,20,9,191,7,31,0,1,191,7,32,128,21,55,191,6,43,128,2,59,191,6,38,128,21,39,191,6,54,128,2,52,191,6,51,128,20,1,56,191,7,2,0,46,191,7,8,128,19,23,191,8,12,0,29,191,7,42,128,19,52,191,8,16,0,9,191,8,27,128,17,36,191,9,19,128,2,52,191,7,62,13,128,15,36,191,10,23,128,2,21,191,8,59,27,1,128,11,5,39,191,11,26,128,3,48,191,9,54,20,128,8,6,35,61,191,12,29,128,3,11,61,191,10,59,49,39,29,24,32,42,51,62,191,6,48,62,191,6,25,128,4,17,62,191,23,51,6,191,7,20,128,5,21,62,191,21,53,4,8,191,7,15,128,6,11,53,191,19,38,3,0,13,191,7,11,128,7,2,33,60,191,15,54,15,128,3,22,191,7,6,128,9,3,28,52,191,10,61,42,19,1,128,4,36,191,6,59,128,13,5,20,34,39,44,48,43,36,29,20,3,128,7,50,191,6,45,128,30,2,62,191,6,30,128,30,21,191,7,15,128,30,45,191,6,62,1,128,29,6,191,7,42,128,30,35,191,7,16,128,29,9,62,191,6,53,128,30,45,191,7,26,128,9,7,4,128,18,29,191,7,58,3,128,9,48,54,9,128,16,20,191,8,21,128,9,27,191,2,60,21,128,14,23,61,191,7,44,128,9,8,61,191,4,46,9,128,10,3,39,191,8,60,6,128,9,48,191,7,46,23,3,128,5,9,35,59,191,9,21,128,9,27,191,11,58,51,46,51,60,191,11,24,128,10,28,191,26,26,128,12,16,58,191,22,61,25,128,14,6,44,191,20,49,9,128,17,14,48,191,16,60,28,128,21,17,38,57,191,11,47,23,3,128,25,13,29,36,42,48,53,47,40,32,25,8,128,16], 4401, 5212);
console.log("big_numbers.i glyph 9 done, written 5010 of 5212 bytes");
s.write("big_numbers.i", [0,132,1,11,128,147,4,15,7,128,6,7,46,191,3,53,13,128,3,6,59,191,5,62,14,128,2,44,191,7,54,0,1,62,191,8,9,7,191,9,17,0,60,191,8,7,0,41,191,7,51,128,2,5,58,191,5,62,12,128,3,6,45,191,3,52,11,128,6,3,14,6,128,205,10,30,41,34,16,128,5,30,62,191,4,39,1,128,2,21,191,7,31,128,2,55,191,7,62,2,5,191,9,14,4,191,9,14,0,55,191,8,2,0,24,191,7,35,128,3,38,191,5,47,2,128,4,18,40,51,43,25,128,3], 5010, 5212);
console.log("big_numbers.i glyph 10 done, written 5144 of 5212 bytes");
s.write("big_numbers.i", [0,66,1,11,128,256,128,209,10,30,41,34,16,128,5,30,62,191,4,39,1,128,2,21,191,7,31,128,2,55,191,7,62,2,5,191,9,14,4,191,9,14,0,55,191,8,2,0,24,191,7,35,128,3,38,191,5,47,2,128,4,18,40,51,43,25,128,3], 5144, 5212);
console.log("big_numbers.i glyph 11 done, written 5212 of 5212 bytes");
console.log("Upload big_numbers.i done", s.getFree(), "memory left");

s.erase("icons.i");
s.write("icons.i", [1,168,1,33,128,15,12,24,12,128,30,32,63,32,128,30,32,63,32,128,30,32,63,32,128,20,5,128,9,32,63,32,128,9,5,128,9,9,57,34,128,8,32,63,32,128,8,34,57,9,128,8,18,62,63,34,128,7,9,19,9,128,7,34,63,62,18,128,9,19,62,63,33,128,15,33,63,62,19,128,11,20,62,63,28,128,4,3,15,22,20,11,128,4,28,63,62,20,128,13,21,54,7,128,2,9,42,61,191,4,56,30,2,0,7,54,21,128,15,1,128,2,25,62,191,2,49,41,43,56,191,2,53,9,0,1,128,18,26,191,2,44,6,128,4,19,57,63,57,7,128,18,11,62,63,27,128,7,4,48,63,49,128,18,45,63,43,128,9,7,60,63,19,128,16,5,63,61,5,128,10,28,63,43,128,16,21,63,45,128,11,6,63,60,128,8,44,191,4,60,128,2,28,63,35,128,12,60,63,3,0,60,191,4,172,2,191,4,60,128,2,28,63,35,128,12,60,63,3,0,60,191,4,44,128,8,21,63,45,128,11,6,63,60,128,16,5,63,61,5,128,10,28,63,43,128,17,45,63,43,128,9,7,60,63,19,128,17,11,62,63,27,128,7,4,48,63,49,128,19,26,191,2,44,6,128,4,19,57,63,57,7,128,17,1,128,2,25,62,191,2,49,41,43,56,191,2,53,9,0,1,128,15,21,54,7,128,2,9,42,61,191,4,56,30,2,0,7,54,21,128,13,20,62,63,28,128,4,3,16,22,20,11,128,4,28,63,62,20,128,11,19,62,63,33,128,15,33,63,62,19,128,9,18,62,63,34,128,7,9,19,9,128,7,34,63,62,18,128,8,9,57,34,128,8,32,63,32,128,8,34,57,9,128,9,5,128,9,32,63,32,128,9,5,128,20,32,63,32,128,30,32,63,32,128,30,32,63,32,128,30,12,24,12,128,15], 0, 2638);
console.log("icons.i glyph 0 done, written 426 of 2638 bytes");
s.write("icons.i", [0,254,1,33,128,74,2,27,16,128,29,21,58,38,128,28,2,43,63,58,3,128,27,6,51,191,2,27,128,27,3,52,191,2,61,2,128,27,46,191,3,44,128,27,27,191,4,26,128,26,6,60,191,4,18,128,26,34,191,5,12,128,25,2,59,191,5,12,128,25,19,191,6,19,128,25,35,191,6,26,128,25,49,191,6,44,128,25,56,191,6,61,3,128,24,61,191,7,26,128,24,60,191,7,58,3,128,23,54,191,8,37,128,22,15,47,191,9,26,128,20,13,46,36,191,10,22,128,18,9,57,37,16,191,11,34,128,16,23,60,63,22,0,59,191,11,51,18,128,12,8,42,191,2,59,2,0,34,191,13,49,26,8,128,6,2,21,46,191,4,37,128,2,4,59,191,15,55,49,42,41,49,57,191,6,60,7,128,3,27,191,27,28,128,5,44,191,25,49,128,6,3,51,191,23,52,4,128,7,6,51,191,21,54,6,128,9,2,41,191,19,42,3,128,12,23,56,191,15,58,25,128,15,1,27,55,191,11,56,28,2,128,19,10,29,44,51,57,62,58,52,45,30,12,128,44], 426, 2638);
console.log("icons.i glyph 1 done, written 682 of 2638 bytes");
s.write("icons.i", [2,15,1,41,128,218,1,34,57,191,9,57,34,1,128,26,34,191,13,34,128,26,57,63,18,0,191,7,0,18,63,57,128,26,191,2,128,2,45,191,5,45,128,2,191,2,128,17,7,128,8,191,2,128,11,191,2,128,7,7,128,8,24,61,12,128,7,191,2,128,11,191,2,128,6,4,55,37,128,6,22,191,2,25,128,7,191,2,128,11,191,2,128,6,14,61,63,36,128,4,6,59,63,27,128,8,191,2,128,11,191,2,128,7,15,61,63,15,128,3,41,63,44,128,4,6,128,4,191,2,128,11,191,2,128,4,6,128,3,30,63,54,128,2,4,190,2,7,128,3,21,60,13,128,3,191,2,128,11,191,2,128,3,5,55,34,128,2,1,54,63,16,0,24,63,45,128,3,5,59,63,31,128,3,191,2,128,11,191,2,128,3,17,191,2,15,128,2,31,63,38,0,40,63,25,128,3,29,63,48,128,4,191,2,128,11,191,2,128,4,35,63,43,128,2,11,63,54,0,47,63,16,128,3,47,63,24,128,4,191,2,128,11,191,2,128,4,10,63,60,128,2,2,63,61,0,54,63,9,128,3,54,63,11,128,4,191,2,128,11,191,2,128,5,61,63,4,128,2,59,63,4,53,63,10,128,3,53,63,14,128,4,191,2,128,11,191,2,128,4,1,62,63,3,128,2,61,63,2,47,63,16,128,3,45,63,26,128,4,191,2,128,11,191,2,128,4,12,63,59,128,2,2,63,60,0,39,63,27,128,3,26,63,53,2,128,3,191,2,128,11,191,2,128,4,42,63,40,128,2,14,63,53,0,21,63,48,128,3,2,56,63,35,128,3,191,2,128,11,191,2,128,3,21,63,62,9,128,2,35,63,34,0,2,61,63,12,128,3,14,55,8,128,3,191,2,128,11,191,2,128,3,2,50,25,128,2,3,58,63,13,128,2,34,63,50,128,4,1,128,4,191,2,128,11,191,2,128,4,1,128,3,37,63,47,128,3,2,56,63,37,128,8,191,2,128,11,191,2,128,7,24,63,62,10,128,4,15,61,63,30,128,7,191,2,128,11,191,2,128,6,17,191,2,26,128,6,16,56,8,128,7,57,63,18,128,9,18,63,57,128,6,2,50,27,128,8,2,128,8,34,191,13,34,128,7,2,128,18,1,34,57,191,9,57,34,1,128,177], 682, 2638);
console.log("icons.i glyph 2 done, written 1211 of 2638 bytes");
s.write("icons.i", [0,100,1,16,128,164,10,35,53,188,2,53,35,10,128,6,1,37,191,8,37,1,128,3,1,47,191,10,47,1,128,2,37,191,12,37,0,10,191,14,10,35,191,14,35,53,191,14,53,60,191,14,188,2,191,14,60,53,191,14,53,35,191,14,35,10,191,14,10,0,37,191,12,37,128,2,1,47,191,10,47,1,128,3,1,37,191,8,37,1,128,6,10,35,53,188,2,53,35,10,128,132], 1211, 2638);
console.log("icons.i glyph 3 done, written 1313 of 2638 bytes");
s.write("icons.i", [0,126,1,25,128,150,191,18,60,42,27,17,8,4,1,191,15,56,36,16,1,128,6,191,13,56,25,1,128,9,191,11,59,28,2,128,11,191,10,45,4,128,13,191,9,33,128,15,191,7,60,20,128,16,191,6,62,15,128,17,191,6,23,128,18,191,5,31,128,19,191,4,42,128,20,191,3,60,6,128,20,191,3,30,128,21,191,2,55,1,128,21,191,2,21,128,22,63,59,1,128,22,63,38,128,23,63,16,128,23,57,128,24,39,128,24,27,128,24,16,128,24,9,128,24,4,128,124], 1313, 2638);
console.log("icons.i glyph 4 done, written 1441 of 2638 bytes");
s.write("icons.i", [0,128,1,25,128,150,1,4,8,17,27,42,60,191,18,128,6,1,16,36,56,191,15,128,9,1,25,56,191,13,128,11,2,28,59,191,11,128,13,4,45,191,10,128,15,33,191,9,128,16,20,60,191,7,128,17,15,62,191,6,128,18,23,191,6,128,19,31,191,5,128,20,42,191,4,128,20,6,60,191,3,128,21,30,191,3,128,21,1,55,191,2,128,22,21,191,2,128,22,1,59,63,128,23,38,63,128,23,16,63,128,24,57,128,24,39,128,24,27,128,24,16,128,24,9,128,24,4,128,100], 1441, 2638);
console.log("icons.i glyph 5 done, written 1571 of 2638 bytes");
s.write("icons.i", [0,128,1,25,128,150,4,128,24,9,128,24,16,128,24,27,128,24,39,128,24,57,128,24,63,16,128,23,63,38,128,23,63,59,1,128,22,191,2,21,128,22,191,2,55,1,128,21,191,3,30,128,21,191,3,60,6,128,20,191,4,42,128,20,191,5,31,128,19,191,6,23,128,18,191,6,62,15,128,17,191,7,60,20,128,16,191,9,33,128,15,191,10,45,4,128,13,191,11,59,28,2,128,11,191,13,56,25,1,128,9,191,15,56,36,16,1,128,6,191,18,60,42,26,17,8,4,1,128,100], 1571, 2638);
console.log("icons.i glyph 6 done, written 1701 of 2638 bytes");
s.write("icons.i", [0,126,1,25,128,174,4,128,24,9,128,24,16,128,24,27,128,24,39,128,24,57,128,23,16,63,128,23,38,63,128,22,1,59,63,128,22,21,191,2,128,21,1,55,191,2,128,21,30,191,3,128,20,6,60,191,3,128,20,42,191,4,128,19,31,191,5,128,18,23,191,6,128,17,15,62,191,6,128,16,20,60,191,7,128,15,33,191,9,128,13,4,45,191,10,128,11,2,28,59,191,11,128,9,1,25,56,191,13,128,6,1,16,36,56,191,15,1,4,8,17,26,42,60,191,18,128,100], 1701, 2638);
console.log("icons.i glyph 7 done, written 1829 of 2638 bytes");
s.write("icons.i", [1,26,1,37,128,239,10,41,8,128,33,10,45,48,43,8,128,31,10,45,176,3,43,8,128,29,10,45,176,5,43,8,128,27,10,45,176,2,43,18,45,176,2,43,8,128,25,10,45,176,2,43,8,0,10,45,176,2,43,8,128,23,10,45,176,2,43,8,128,3,10,45,176,2,43,8,128,21,10,45,176,2,43,8,128,5,10,45,176,2,43,8,128,19,10,45,176,2,43,8,128,7,10,45,176,2,43,8,128,17,10,45,176,2,43,8,128,9,10,45,176,2,44,8,128,15,10,45,176,2,44,8,128,11,10,45,176,2,44,8,128,13,10,45,176,2,44,8,128,13,10,45,176,2,44,8,128,11,10,45,176,2,44,8,128,15,10,45,176,2,44,8,128,9,10,45,176,2,44,8,128,17,10,45,176,2,44,8,128,7,10,45,176,2,44,8,128,19,10,45,176,2,44,8,128,5,10,45,176,2,44,8,128,21,10,45,176,2,44,8,128,3,10,45,176,2,44,8,128,23,10,45,176,2,44,8,0,10,45,176,2,44,8,128,25,10,45,176,2,44,8,38,176,2,44,8,128,27,10,45,176,2,39,5,41,44,8,128,29,10,45,43,7,0,5,7,128,31,10,7,128,256,128,4], 1829, 2638);
console.log("icons.i glyph 8 done, written 2113 of 2638 bytes");
s.write("icons.i", [1,3,1,38,128,192,8,128,32,13,128,3,16,47,25,128,30,25,48,24,0,11,47,176,2,25,128,28,25,176,3,16,1,33,176,3,25,128,26,25,176,3,33,1,0,1,33,176,3,25,128,24,25,176,3,33,1,128,3,1,33,176,3,25,128,22,25,176,3,33,1,128,5,1,33,176,3,25,128,20,25,176,3,33,1,128,7,1,33,176,3,25,128,18,25,176,3,33,1,128,9,1,33,176,3,25,128,16,25,176,3,33,1,128,11,1,33,176,3,25,128,14,25,176,3,33,1,128,13,1,33,176,3,25,128,12,25,176,3,33,1,128,15,1,33,176,3,25,128,10,25,176,3,33,1,128,17,1,33,176,3,25,128,8,25,176,3,33,1,128,19,1,33,176,3,25,128,6,25,176,3,33,1,128,21,1,33,176,3,25,128,4,25,176,3,33,1,128,23,1,33,176,3,25,128,2,25,176,3,33,1,128,25,1,33,176,3,153,2,176,3,33,1,128,27,1,33,176,6,33,1,128,29,1,33,176,4,33,1,128,31,1,33,176,2,33,1,128,33,1,161,2,1,128,35,129,2,128,256,128,28], 2113, 2638);
console.log("icons.i glyph 9 done, written 2374 of 2638 bytes");
s.write("icons.i", [1,6,1,17,128,108,60,191,3,27,128,12,32,40,56,34,14,128,2,20,8,128,9,14,49,128,3,2,56,55,7,128,5,1,19,37,48,59,37,19,1,0,28,61,53,5,128,3,18,54,63,60,53,188,2,63,54,33,62,61,60,44,128,2,26,62,54,21,1,37,41,1,20,57,63,62,144,2,9,0,18,63,47,48,43,7,42,28,128,2,4,54,63,18,128,2,1,54,57,44,176,2,43,17,8,128,3,4,57,54,1,0,19,63,20,18,176,3,43,11,128,4,20,63,19,0,37,60,1,0,19,176,4,29,128,3,1,60,37,0,44,51,23,28,8,19,176,4,3,4,28,23,51,44,0,44,51,34,42,12,0,36,176,2,45,1,6,42,34,51,44,0,37,60,1,128,3,6,32,35,11,128,3,1,60,37,0,19,63,20,128,10,20,63,19,0,1,54,57,4,128,3,6,4,128,3,4,57,54,1,128,2,18,63,45,4,128,2,42,28,128,2,4,45,63,18,128,4,26,63,57,20,1,34,23,1,20,57,63,26,128,6,18,54,63,60,179,2,60,63,54,18,128,8,1,19,37,172,2,37,19,1,128,158], 2374, 2638);
console.log("icons.i glyph 10 done, written 2638 of 2638 bytes");
console.log("Upload icons.i done", s.getFree(), "memory left");

s.erase("icon-watchnumbers.i");
s.write("icon-watchnumbers.i", [2,24,1,79,128,38,143,2,128,77,159,2,128,77,31,24,128,67,6,3,128,8,31,16,128,7,3,6,128,58,16,26,128,8,31,16,128,7,26,16,128,58,5,37,128,8,31,16,128,7,37,5,128,49,33,28,128,8,35,7,128,7,31,16,128,6,7,35,128,9,33,39,128,39,6,59,8,128,7,5,4,128,7,31,16,128,6,4,5,128,8,8,59,6,128,40,30,43,128,16,21,11,128,16,43,30,128,41,1,55,16,128,32,16,55,1,128,42,20,52,128,32,52,20,128,44,47,26,128,30,26,47,128,35,6,128,9,4,21,128,30,12,2,128,35,25,10,128,49,6,25,6,128,25,6,38,8,128,47,10,38,10,128,27,10,33,128,46,8,33,8,128,29,8,128,227,9,128,66,13,128,11,15,53,16,128,62,16,53,23,128,12,20,55,44,8,128,58,8,44,55,20,128,14,1,29,59,34,2,128,54,2,34,59,29,1,128,17,6,39,50,128,54,41,39,6,128,21,11,128,54,9,128,256,128,74,6,16,5,128,67,5,16,6,128,6,3,26,37,35,5,128,63,5,35,37,26,3,128,9,7,4,128,63,4,7,128,256,128,256,128,48,191,8,11,128,61,191,8,11,128,256,128,256,128,46,7,11,128,63,11,7,128,10,22,37,35,15,128,63,15,35,37,22,128,8,13,5,128,67,5,13,128,256,128,76,11,128,54,9,128,21,6,39,50,128,54,41,39,6,128,17,1,30,59,34,2,128,54,2,34,59,30,1,128,14,20,55,43,8,128,58,8,43,55,20,128,12,15,53,16,128,62,16,53,23,128,11,9,128,66,13,128,178,1,6,128,45,6,1,128,29,10,38,10,128,45,10,38,10,128,27,10,38,10,128,47,10,38,10,128,26,14,3,128,49,3,14,128,36,4,21,128,30,12,2,128,45,47,26,128,30,26,47,128,44,20,52,128,32,52,20,128,42,1,55,16,128,32,16,55,1,128,41,30,43,128,16,15,8,128,16,43,30,128,40,6,59,8,128,7,15,11,128,7,31,16,128,6,11,15,128,8,8,59,6,128,39,33,28,128,8,35,7,128,7,31,16,128,6,7,35,128,9,33,39,128,48,5,37,128,8,31,16,128,7,37,5,128,58,13,22,128,8,31,16,128,7,22,13,128,68,31,16,128,77,31,16,128,77,31,16,128,77,21,16,128,39], 0, 538);
console.log("icon-watchnumbers.i glyph 0 done, written 538 of 538 bytes");
console.log("Upload icon-watchnumbers.i done", s.getFree(), "memory left");

}
fileCache['./src/globals.js'] = () => {
module.exports = {
  BL_LEVEL: 1,
  NEXT_TIMER: 0,
}
}
fileCache['./src/ID205L.js'] = () => {
// Espruino library for ID205L smart watch
const IT7259 = require("./src/devices/IT7259.js"); // touch screen
const ST7789 = require("./src/devices/ST7789.js"); // display
const HX3600 = require("./src/devices/HX3600.js"); // heart sensor
const B271 = require("./src/devices/B271.js"); // accelerometer

const fb = require('fb'); // framebuffer
const spim = require('spim'); // SPIM interface

const pins = {
  ACCELEROMETER_ENABLE: D4,
  ACCELEROMETER_SCL: D5,
  ACCELEROMETER_SDA: D27,

  BUTTON: D16,

  HEART_SDA: D7,
  HEART_SCL: D8,
  HEART_BACKLIGHT: D14,
  HEART_ENABLE: D17,

  MOTOR: D20,

  BACKLIGHT: D22,
  BACKLIGHT2: D30,

  BATTERY_LEVEL: D28,
  CHARGING: D39,

  TOUCH_RESET: D24, // also a reset for lcd
  TOUCH_SCL: D42,
  TOUCH_SDA: D43,
  TOUCH_INT: D44,
  TOUCH_ENABLE: D45,

  LCD_SCK: D2,
  LCD_RESET: D46,
  LCD_CS: D47,
  LCD_SI: D29,
  LCD_DC: D31,

  MEMORY_CS: D21,
  MEMORY_WP: D12,
  MEMORY_SO: D19,
  MEMORY_HOLD: D33,
  MEMORY_CLK: D38,
  MEMORY_SI: D9,
};

const vibrate = ms => digitalPulse(pins.MOTOR, 1, ms);

// values 0..3, 0 is off
const setBacklight = level => {
  pins.BACKLIGHT2.write(level >> 1 & 1);
  pins.BACKLIGHT.write(level & 1);
};

pins.CHARGING.mode('input_pullup');
pins.BATTERY_LEVEL.mode('analog');

const getBattery = () => 5 * (analogRead(pins.BATTERY_LEVEL) - 0.68);
const isCharging = () => !pins.CHARGING.read();

const heart = HX3600({
  scl: pins.HEART_SCL,
  sda: pins.HEART_SDA,
  enable: pins.HEART_ENABLE
});

const accelerometer = B271({
  scl: pins.ACCELEROMETER_SCL,
  sda: pins.ACCELEROMETER_SDA,
  enable: pins.ACCELEROMETER_ENABLE
});

const touch = IT7259({
  sda: pins.TOUCH_SDA,
  scl: pins.TOUCH_SCL,
  enable: pins.TOUCH_ENABLE,
  reset: pins.TOUCH_RESET,
  int: pins.TOUCH_INT,
});

const lcd = {
  init: () => {
    fb.init();

    pins.TOUCH_RESET.write(0); // causes screen flicker if non-zero
    ST7789({
      dcx: pins.LCD_DC,
      ss: pins.LCD_CS,
      rst: pins.LCD_RESET,
      sck: pins.LCD_SCK,
      mosi: pins.LCD_SI
    }).then(() => setInterval(fb.render, 50))
  },
  sleep: () => spim.sendSync([0x10, 0], 1),
  wake: () => spim.sendSync([0x11, 0], 1),
}

console.log('ex', module.exports);

module.exports = {
  pins: pins,
  heart: heart,
  accelerometer: accelerometer,
  touch: touch,
  lcd: lcd,
  vibrate: vibrate,
  setBacklight: setBacklight,
  getBattery: getBattery,
  isCharging: isCharging,
}
}
fileCache['./src/index.js'] = () => {
const Watch = require("./src/ID205L");
const SETTINGS = require('./src/globals');

E.enableWatchdog(100);

const pages = [
  require('./src/pages/settings'),
  require('./src/pages/clock'),
  require('./src/apps/timer'),
  require('./src/apps/level'),
  require('./src/pages/info'),
];

Watch.lcd.init();

// ====

const ACCEL_THRESHOLD = 100;
let prevAccel = { x: 0, y: 0, z: 0 };
const resetAccel = () => {
  prevAccel = Watch.accelerometer.read();
};
const checkAccel = () => {
  const data = Watch.accelerometer.read();

  let axii = 0;
  if (Math.abs(prevAccel.x - data.x) > ACCEL_THRESHOLD) { axii++; }
  if (Math.abs(prevAccel.y - data.y) > ACCEL_THRESHOLD) { axii++; }
  if (Math.abs(prevAccel.z - data.z) > ACCEL_THRESHOLD) { axii++; }
  if (axii > 1) {
    prevAccel = data;
    return true;
  }
  return false;
};

// ====

let pId = 0;
let page = null;

function setPage(p) {
  if (p !== null && !pages[p]) {
    return;
  }

  if (page && page.onStop) {
    page.onStop();
  };
  page = null;
  if (pages[p]) {
    pId = p;
    page = pages[p]();
  }
}

const sleep = () => {
  if (!page) {
    return;
  }
  Watch.setBacklight(0);
  Watch.lcd.sleep();
  resetAccel();
  setPage(null);
};

const wake = () => {
  idleTimer = 0;
  if (page) {
    return;
  }
  Watch.lcd.wake();
  Watch.setBacklight(SETTINGS.BL_LEVEL);
  setPage(1); // will start defailt page
};

const IDLE_TIMEOUT = 10000;
let idleTimer = 0;

const updateDevices = () => {
  if (page) {
    idleTimer += 1000;
    if (page.sleep !== false && idleTimer >= IDLE_TIMEOUT) {
      sleep();
    }
    return;
  }

  if (checkAccel()) {
    wake();
  }
};

// initialization

Watch.vibrate([50, 50, 50]);
digitalPulse(Watch.pins.HEART_BACKLIGHT, 1, 100);

Watch.setBacklight(SETTINGS.BL_LEVEL);

Watch.accelerometer.enable();

Watch.touch.enable();

const longTapTimer = 0;
const longTapEvent = 0;
const onLongTap = () => {
  if (page && page.onLongTap) {
    page.onLongTap(longTapEvent);
  }
}

Watch.touch.onTouch = (event) => {
  wake();

  if (!page) {
    return;
  }

  if (event.type === 0) {
    if (longTapTimer) {
      clearInterval(longTapTimer);
    }
    return;
  }

  if (event.type === 9) {
    if (longTapTimer) {
      clearInterval(longTapTimer);
    }
    longTapEvent = event;
    longTapTimer = setInterval(onLongTap, 500);
    return;
  }

  if (event.type === 128) { // tap or swipe
    if (longTapTimer) {
      clearInterval(longTapTimer);
      longTapTimer = 0;
    }
    if (event.dir == -3) {
      if (page && page.onTap) {
        page.onTap(event);
      }
    }
    if (page && page.isApp) {
      if (page.onSwipe) {
        page.onSwipe(event);
      }
      return;
    }
    if (event.dir == 2) {
      setPage(pId - 1);
    }
    if (event.dir == 4) {
      setPage(pId + 1);
    }
    if (event.dir == 1) {
      console.log('up');
    }
    if (event.dir == 3) {
      console.log('down');
    }
    return;
  }

  // if (event.type === 9) { // move
  //   if (page && page.onMove) {
  //     page.onMove(event);
  //   }
  // }
};

setInterval(updateDevices, 1000);

let resetT = 0;
setWatch(() => {
  resetT = setTimeout(() => {
    E.reboot();
  }, 3000);

  if (!page) {
    wake();
  } else {
    if (page.isApp) {
      setPage(1);
    } else {
      sleep();
    }
  }
}, BTN1, { edge: 'rising', debounce: 10, repeat: true });

setWatch(() => {
  if (resetT) {
    clearTimeout(resetT);
    resetT = null;
  }
}, BTN1, { edge: 'falling', debounce: 10, repeat: true });

setWatch(() => {
  wake();
  Watch.vibrate([50, 50, 50]);
}, Watch.pins.CHARGING, { edge: 'both', debounce: 10, repeat: true });

setPage(1);
}
fileCache['./src/components/app-icon.js'] = () => {
const st = require('Storage');
const fb = require('fb');

const font = st.readArrayBuffer('font1.i');
const str = text => text.split('').map(char => char.charCodeAt(0) - 32).filter(i => i >= 0);

module.exports = (props) => {
  return (navigate) => {
    const ui = [
      fb.add({
        x: 44 + props.iconX,
        y: 44,
        c: props.iconColor,
        buf: props.icon,
        index: 0
      }),
      fb.add({
        x: 90,
        y: 160,
        c: 0xffff,
        buf: font,
        index: str(props.title),
      })
    ];

    return {
      onStop: () => ui.forEach(u => fb.remove(u)),
      onTap: () => navigate(1),
    };
  }
}
}
fileCache['./src/components/navigator.js'] = () => {
module.exports = (screens) => () => {
  let index;
  let page;
  let result = {};

  let navigate;
  navigate = (n) => {
    if (n === index || !screens[n]) return;
    if (page) page.onStop();
    index = n;
    page = screens[index](navigate);
    result.onStop = page.onStop;
    result.onTap = page.onTap;
    result.onLongTap = page.onLongTap;
    result.sleep = page.sleep;
    result.isApp = n > 0;
  }

  navigate(0);

  return result;
};
}
fileCache['./src/components/btn.js'] = () => {
const fb = require('fb');
const st = require('Storage');
const icons = st.readArrayBuffer('icons.i');

const btn = (props) => {
  const rects = [
    fb.add({
      x: props.x,
      y: props.y,
      w: 96,
      h: 96,
      c: props.c,
    }),
    fb.add({ x: props.x, y: props.y - 6, c: 0, buf: icons, index: 4 }),
    fb.add({ x: props.x + 71, y: props.y - 6, c: 0, buf: icons, index: 5 }),
    fb.add({ x: props.x, y: props.y - 6 + 72, c: 0, buf: icons, index: 6 }),
    fb.add({ x: props.x + 71, y: props.y - 6 + 72, c: 0, buf: icons, index: 7 }),
  ];

  return {
    remove: () => {
      rects.forEach(p => fb.remove(p));
    },
    set: (opts) => fb.set(rects[0], opts)
  }
}

module.exports = btn;
}
fileCache['./src/pages/clock.js'] = () => {
// main screen, renders current time
const fb = require('fb');
const st = require('Storage');
const Watch = require('./src/ID205L');

const big_font = st.readArrayBuffer('big_numbers.i');
const font = st.readArrayBuffer('font1.i');
const batt = st.readArrayBuffer('battery.i');

const str = text => text.split('').map(char => char.charCodeAt(0) - 32).filter(i => i >= 0);

const dows = [
  'Sunday',
  'Monday',
  'Tuesday',
  'Wednesday',
  'Thursday',
  'Friday',
  'Saturday',
]

const suffix = (day) => {
  if (day % 10 === 1) {
    return 'st';
  }
  if (day % 10 === 2) {
    return 'nd';
  }

  return 'th';
}

const start = () => {
  const time = fb.add({
    x: 45,
    y: 80,
    buf: big_font,
    index: [],
    c: 0xffff,
  });
  const date = fb.add({
    x: 44,
    y: 140,
    buf: font,
    index: [],
    c: 0xffff,
  });

  const chargeInd = fb.add({
    x: 240 - 8 - 26 - 10,
    y: 8,
    c: 0,
    buf: batt,
    index: 1,
  })
  const batteryBg = fb.add({
    x: 240 - 8 - 26,
    y: 8,
    c: 0xffff,
    buf: batt,
    index: 0,
  });
  const battery = fb.add({
    x: 240 - 8 - 26 + 2,
    y: 10,
    w: 21,
    h: 9,
    c: fb.color(0, 255, 0),
  });

  const renderBattery = () => {
    fb.set(battery, { w: 4 + 16 * Watch.getBattery() });
    fb.set(chargeInd, { c: Watch.isCharging() ? 0xffff : 0 })
  };

  const update = () => {
    const now = new Date();
    const h = now.getHours();
    const m = now.getMinutes();
    const d = now.getDate();
    const dow = now.getDay();
    fb.set(time, {
      index: [
        Math.floor(h / 10),
        Math.floor(h % 10),
        10,
        Math.floor(m / 10),
        Math.floor(m % 10),
      ]
    });
    fb.set(date, {
      index: str(`${dows[dow]}, ${d}${suffix(d)}`)
    });

    renderBattery();
  };

  update();
  const int = setInterval(update, 1000);

  return {
    onStop: () => {
      clearInterval(int);
      fb.remove(time);
      fb.remove(date);
      fb.remove(battery);
      fb.remove(batteryBg);
      fb.remove(chargeInd);
    }
  }
};

module.exports = start;
}
fileCache['./src/pages/info.js'] = () => {
const st = require('Storage');
const fb = require('fb');

const font = st.readArrayBuffer('font1.i');
const str = text => text.split('').map(char => char.charCodeAt(0) - 32).filter(i => i >= 0);

const BG = fb.color(0x35, 0x35, 0x35);
const GREEN = fb.color(0x58, 0xdc, 0x63);

const maxStorage = 40960;

const init = () => {
  const controls = [
    fb.add({
      x: 12,
      y: 12,
      buf: font,
      c: 0xffff,
      index: str("Free storage:"),
    }),
    fb.add({
      x: 12,
      y: 32,
      buf: font,
      c: 0xffff,
      index: str(`${st.getFree()} bytes`),
    }),
    fb.add({
      x: 12,
      y: 62,
      c: BG,
      h: 12,
      w: 216,
    }),
    fb.add({
      x: 12,
      y: 62,
      c: GREEN,
      h: 12,
      w: 216 * (st.getFree() / maxStorage),
    }),
    fb.add({
      x: 12,
      y: 86,
      buf: font,
      c: 0xffff,
      index: str("Vars:"),
    }),
    fb.add({
      x: 12,
      y: 86 + 24,
      buf: font,
      c: 0xffff,
      index: str(`${process.memory().usage} / ${process.memory().total}`),
    }),
    fb.add({
      x: 12,
      y: 86 + 24 + 12 + 12,
      c: BG,
      h: 12,
      w: 216,
    }),
    fb.add({
      x: 12,
      y: 86 + 24 + 12 + 12,
      c: GREEN,
      h: 12,
      w: 216 * (process.memory().usage / process.memory().total),
    })
  ];

  return {
    onStop: () => {
      controls.forEach(ctrl => fb.remove(ctrl));
    }
  }
}

module.exports = init;
}
fileCache['./src/pages/settings.js'] = () => {
// settings screen, renders brightness level
const st = require('Storage');
const fb = require('fb');
const SETTINGS = require('./src/globals');

const icons = st.readArrayBuffer('icons.i');

const btn1value = 0;
const btn2value = 0;

const FG = fb.color(0xd8, 0xd8, 0xd8);
const BG = fb.color(0x53, 0x53, 0x53);

const start = () => {
  const bgLight = fb.add({
    x: 12,
    y: 12,
    w: 96,
    h: 240 - 12 - 12,
    c: FG,
  });
  const fgLight = fb.add({
    x: 12,
    y: 12,
    w: 96,
    c: BG,
  });
  const lightIcon = fb.add({
    x: 44,
    y: 163,
    c: 0,
    buf: icons,
    index: 0,
  });

  const bgDnd = fb.add({
    x: 129,
    y: 12,
    w: 96,
    h: 96,
    c: BG,
  });
  const dndIcon = fb.add({
    x: 160,
    y: 46,
    c: btn1value ? 0 : 0xffff,
    buf: icons,
    index: 1,
  });

  const bgCall = fb.add({
    x: 129,
    y: 132,
    w: 96,
    h: 96,
    c: BG,
  });
  const callIcon = fb.add({
    x: 158,
    y: 164,
    c: btn2value ? 0 : 0xffff,
    buf: icons,
    index: 2,
  });

  const rects = [
    fb.add({ x: 129, y: 126, c: 0, buf: icons, index: 4 }),
    fb.add({ x: 129 + 71, y: 126, c: 0, buf: icons, index: 5 }),
    fb.add({ x: 129, y: 126 + 72, c: 0, buf: icons, index: 6 }),
    fb.add({ x: 129 + 71, y: 126 + 72, c: 0, buf: icons, index: 7 }),

    fb.add({ x: 129, y: 6, c: 0, buf: icons, index: 4 }),
    fb.add({ x: 129 + 71, y: 6, c: 0, buf: icons, index: 5 }),
    fb.add({ x: 129, y: 6 + 72, c: 0, buf: icons, index: 6 }),
    fb.add({ x: 129 + 71, y: 6 + 72, c: 0, buf: icons, index: 7 }),

    fb.add({ x: 12, y: 6, c: 0, buf: icons, index: 4 }),
    fb.add({ x: 12 + 71, y: 6, c: 0, buf: icons, index: 5 }),

    fb.add({ x: 12, y: 126 + 72, c: 0, buf: icons, index: 6 }),
    fb.add({ x: 12 + 71, y: 126 + 72, c: 0, buf: icons, index: 7 }),
  ];

  const updateLight = () => {
    const value = 3 - SETTINGS.BL_LEVEL;
    fb.set(fgLight, { h: 80 * value });
  };

  const onTap = (e) => {
    if (e.x < 120) { // backlight
      const value = 3 - Math.floor(e.y / 80);
      if (value === SETTINGS.BL_LEVEL) {
        return;
      }
      Watch.vibrate(30);
      SETTINGS.BL_LEVEL = value;
      Watch.setBacklight(SETTINGS.BL_LEVEL);

      updateLight()
      return;
    }

    if (e.y < 120) {
      btn1value = !btn1value;
      Watch.vibrate(30);
      fb.set(bgDnd, { c: btn1value ? FG : BG });
      fb.set(dndIcon, { c: btn1value ? 0 : 0xffff });
    } else {
      btn2value = !btn2value;
      Watch.vibrate(30);
      fb.set(bgCall, { c: btn2value ? FG : BG });
      fb.set(callIcon, { c: btn2value ? 0 : 0xffff });
    }
  }

  updateLight();

  return {
    onStop: () => {
      fb.remove(bgLight);
      fb.remove(fgLight);
      fb.remove(bgCall);
      fb.remove(bgDnd);
      fb.remove(dndIcon);
      fb.remove(callIcon);
      fb.remove(lightIcon);
      rects.forEach(rect => fb.remove(rect));
    },
    onTap: onTap,
  }
};

module.exports = start;
}
fileCache['./src/apps/timer/index.js'] = () => {
const st = require('Storage');
const fb = require('fb');
const navigator = require('./src/components/navigator');

const navi = navigator([
  require('./src/components/app-icon')({
    title: 'Timer',
    icon: st.readArrayBuffer('icon-timer.i'),
    iconX: 28,
    iconColor: fb.color(0xff, 0x6a, 0x00)
  }),
  require('./src/apps/timer/setup'),
  require('./src/apps/timer/active'),
]);

module.exports = navi;
}
fileCache['./src/apps/timer/active.js'] = () => {
const fb = require('fb');
const st = require('Storage');
const SETTINGS = require('./src/globals');

const big = st.readArrayBuffer('big_numbers.i');
const font = st.readArrayBuffer('font1.i');

const str = text => text.split('').map(char => char.charCodeAt(0) - 32).filter(i => i >= 0);

module.exports = (navigate) => {
  const COLOR_BR = fb.color(0xFF, 0x61, 0x00);

  const ui = [
    fb.add({ x: 30, y: 70, c: COLOR_BR, buf: big, index: [] }),
    fb.add({ x: 80, y: 212, c: 0xffff, buf: font, index: str('stop') }),
  ];

  const render = () => {
    const diff = (SETTINGS.NEXT_TIMER - new Date().getTime()) / 1000;
    if (diff < 0) {
      navigate(1);
      return;
    };

    const ss = diff % 60;
    const mm = (diff / 60) % 60;
    const hh = (diff / 3600);
    if (hh >= 1) {
      if (hh >= 10) {
        fb.set(ui[0], { index: [hh / 10, hh, 11, 10, mm / 10, mm % 10, 10, ss / 10, ss % 10] });
      } else {
        fb.set(ui[0], { index: [hh, 11, mm / 10, mm % 10, 10, ss / 10, ss % 10] });
      }
      return;
    }
    fb.set(ui[0], { index: [mm / 10, mm % 10, 10, ss / 10, ss % 10] });
  }
  const int = setInterval(render, 1000);
  render();

  return {
    onStop: () => {
      clearInterval(int);
      ui.forEach(u => fb.remove(u));
    },
    sleep: false,
  };
}
}
fileCache['./src/apps/timer/setup.js'] = () => {
const fb = require('fb');
const st = require('Storage');
const SETTINGS = require('./src/globals');
const Watch = require('./src/ID205L');

const big = st.readArrayBuffer('big_numbers.i');
const icons = st.readArrayBuffer('icons.i');
const font = st.readArrayBuffer('font1.i');

const str = text => text.split('').map(char => char.charCodeAt(0) - 32).filter(i => i >= 0);

const start = (navigate) => {
  if (SETTINGS.NEXT_TIMER) {
    setTimeout(() => navigate(2), 1);
    return { onStop: () => { } };
  }

  const COLOR_BR = fb.color(0xFF, 0x61, 0x00);

  let hh = 0;
  let mm = 15;

  const ui = [
    fb.add({ x: 30, y: 70, c: COLOR_BR, buf: big, index: [0, 0] }),
    fb.add({ x: 132, y: 70, c: COLOR_BR, buf: big, index: [1, 5] }),
    fb.add({ x: 50, y: 30, c: 0xffff, buf: icons, index: 8 }),
    fb.add({ x: 147, y: 30, c: 0xffff, buf: icons, index: 8 }),
    fb.add({ x: 50, y: 155, c: 0xffff, buf: icons, index: 9 }),
    fb.add({ x: 147, y: 155, c: 0xffff, buf: icons, index: 9 }),
    fb.add({ x: 45, y: 132, c: 0xffff, buf: font, index: str('hours') }),
    fb.add({ x: 145, y: 132, c: 0xffff, buf: font, index: str('mins') }),
    fb.add({ x: 185, y: 212, c: 0xffff, buf: font, index: str('start') }),
  ];

  const onTap = (e) => {
    const mod = e.y > 100 ? -1 : 1;
    if (e.y > 200) {
      Watch.vibrate([50, 50, 50]);
      SETTINGS.NEXT_TIMER = new Date() + (1000 * 60 * (mm + 60 * hh));
      navigate(2); // go to active page
      return;
    }
    if (e.x < 100) {
      hh += mod;
      if (hh > 99) { hh = 99; return; }
      if (hh < 0) { hh = 0; return; }
    } else {
      if (mod > 0) {
        if (mm == 59) {
          if (hh == 99) return;
          mm = 0; hh++;
        } else {
          mm++;
        }
      } else {
        if (mm <= 1 && hh == 0) return;
        if (mm == 0) {
          mm = 59;
          hh--;
        } else {
          mm--;
        }
      }
    }
    Watch.vibrate(30);
    fb.set(ui[0], { index: [hh / 10, hh % 10] });
    fb.set(ui[1], { index: [mm / 10, mm % 10] });
  };
  const onLongTap = (e) => {
    if (e.y > 200) return;
    if (e.y > 100) {
      if (mm == 0) return;
      if (hh === 0 && mm == 1) return;
      mm -= (mm % 10 === 0) ? 10 : mm % 10;
      if (hh === 0 && mm == 0) { mm = 1 };
    } else {
      if (mm == 59) return;
      mm += (mm % 10 === 0) ? 10 : (10 - mm % 10);
      if (mm > 59) { mm = 59 };
    }
    Watch.vibrate(30);
    fb.set(ui[0], { index: [hh / 10, hh % 10] });
    fb.set(ui[1], { index: [mm / 10, mm % 10] });
  }
  return {
    onLongTap: onLongTap,
    onTap: onTap,
    onStop: () => {
      ui.forEach(u => fb.remove(u));
    },
  };
}

module.exports = start;
}
fileCache['./src/apps/level/index.js'] = () => {
const st = require('Storage');
const fb = require('fb');
const navigator = require('./src/components/navigator');

const navi = navigator([
  require('./src/components/app-icon')({
    title: 'Level',
    icon: st.readArrayBuffer('icon-level.i'),
    iconX: 0,
    iconColor: fb.color(0x00, 0xde, 0xff),
  }),
  require('./src/apps/level/level'),
]);

module.exports = navi;
}
fileCache['./src/apps/level/level.js'] = () => {
// accelerometer test screen, renders current X/Y accelerometer readings
const fb = require('fb');
const st = require('Storage');
const icons = st.readArrayBuffer('icons.i');
const Watch = require('./src/ID205L');

const start = () => {
  let mode = 0;
  let activeColor = fb.color(0xff, 0, 0);
  const inactiveColor = fb.color(0x66, 0x66, 0x66);
  const xaxis = fb.add({
    x: 12,
    y: 120,
    c: inactiveColor,
    w: 240 - 24,
    h: 1,
  });
  const yaxis = fb.add({
    x: 120,
    y: 12,
    c: inactiveColor,
    w: 1,
    h: 240 - 24,
  });

  const pt = fb.add({
    x: 0,
    y: 0,
    buf: icons,
    index: 3,
    c: activeColor,
  });

  const int = setInterval(() => {
    const data = Watch.accelerometer.read();

    let x;
    let y;
    if (mode === 0) {
      x = data.x;
      y = data.y;
    }
    if (mode === 1) {
      x = data.z;
      y = data.y;
    }
    if (mode === 2) {
      x = data.x;
      y = data.z;
    }

    const Y = (x / 3) + 120;
    const X = (y / 3) + 120;
    fb.set(
      pt,
      {
        x: X - 10,
        y: Y - 20,
      }
    );

    fb.set(xaxis, { c: Math.abs(x) < 15 ? activeColor : inactiveColor });
    fb.set(yaxis, { c: Math.abs(y) < 15 ? activeColor : inactiveColor });
  }, 100);

  const onTap = () => {
    mode = (mode + 1) % 3;
    activeColor = fb.color(
      mode === 0 ? 255 : 0,
      mode === 1 ? 255 : 0,
      mode === 2 ? 255 : 0
    )
    fb.set(pt, { c: activeColor });
  };

  return {
    onStop: () => {
      clearInterval(int);
      fb.remove(pt);
      fb.remove(xaxis);
      fb.remove(yaxis);
    },
    onTap: onTap,
    sleep: false,
  }
}

module.exports = start;
}
fileCache['./src/devices/HX3600.js'] = () => {

// Espruino driver for HX3600 heart sensor

/* HX3600 registers 
addr   value  desc
0x00 - 0x22 - device ID
0x01 - 0x01 - reserved
0x02 - 0x11 - functions enabled (should be 0x33)
0x03 - 0x00 - reserved (should be 0x8f)
0x04 - 0x10 - LED1 phase config
0x05 - 0x20 - LED2 phase config
0x06 - 0x50 - INT1 config
0x07 - 0x07 - INT1 config
0x08 - 0x00 - INT1 config
0x09 - 0x02 - sleep enabled
 
0x14 - 0x00 - ps offset
0x15 - 0x00 - hrs offset
0x16 - 0x40 - ps interval
 
0xA0 - 0x00 - hrs data out
0xA1 - 0x00 - hrs data out
0xA2 - 0x00 - hrs data out
 
0xA3 - 0x00 - als data out
0xA4 - 0x00 - als data out
0xA5 - 0x00 - als data out
 
0xA6 - 0x00 - ps1 data out
0xA7 - 0x00 - ps1 data out
0xA8 - 0x00 - ps1 data out
 
0xA9 - 0x00 - als2 data out
0xAA - 0x00 - als2 data out
0xAB - 0x00 - als2 data out
 
0xC0 - 0x86 - led driver config
*/

const I2C_DEVICEID = 0x44;
/*
Params:
- sda - i2c sda
- scl - i2c scl
- enable - enable pin, chip is on when high
*/
function init(cfg) {
  const i2c = new I2C();
  i2c.setup({ sda: cfg.sda, scl: cfg.scl });
  const result = {
    enable: () => cfg.enable.write(1),
    disable: () => cfg.enable.write(0),
    read: (reg, length) => {
      i2c.writeTo(I2C_DEVICEID, reg);
      return i2c.readFrom(I2C_DEVICEID, length);
    },
    write: (reg, value) => {
      i2c.writeTo(I2C_DEVICEID, reg, value);
    }
  };

  return result;
}

module.exports = init;
}
fileCache['./src/devices/IT7259.js'] = () => {
// Espruino driver for IT7259 touch sensor

const I2C_DEVICEID = 0x46;
const I2C_REG = 225;

/*
 * sda: sda I2C pin
 * scl: scl I2C pin
 * int: interrupt pin
 * reset: reset pin, chip is off when low
 * enable: negated reset pin, chip is on when high
 */
function init(cfg) {
  const i2c = new I2C();
  i2c.setup({ sda: cfg.sda, scl: cfg.scl });

  const result = {
    enable: () => {
      cfg.enable.write(1);
      cfg.reset && cfg.reset.write(0); // ID205L uses separate reset pin for screen and touch controller
    },
    disable: () => cfg.enable.write(0),
    onTouch: event => { },
    onSwipe: event => { },
    read: () => {
      i2c.writeTo(I2C_DEVICEID, I2C_REG);
      const res = i2c.readFrom(I2C_DEVICEID, 16);
      return { x: res[2], y: res[4], type: res[0], dir: (res[10] >> 1) - 3 };
    }
  }

  if (cfg.int) {
    setWatch(
      () => result.onTouch(result.read()),
      cfg.int,
      { edge: 'falling', debounce: 1, repeat: true }
    );
  }

  return result;
}

module.exports = init;
}
fileCache['./src/devices/ST7789.js'] = () => {
// Espruino driver for ST7789 lcd screen 
// this module uses custom spim module that may not be available on your platform

const SPIM = require('spim');

const init = (cfg) => new Promise(resolve => {
  SPIM.setup({
    mosi: cfg.mosi,
    sck: cfg.sck,
    dcx: cfg.dcx,
    ss: cfg.ss,
    speed: '32m',
  });

  digitalPulse(cfg.rst, 0, 10);

  const ST7789_INIT_CODE = [
    // CMD, D0,D1,D2...
    [0x11, 0],     //SLPOUT (11h):
    // This is an unrotated screen
    [0x36, 0],     // MADCTL
    // These 2 rotate the screen by 180 degrees
    //0x36,0xC0],     // MADCTL
    //0x37,[0,80]],   // VSCSAD (37h): Vertical Scroll Start Address of RAM

    [0x3A, 0x55],  // COLMOD - interface pixel format - 16bpp
    [0xB2, 0xC, 0xC, 0, 0x33, 0x33], // PORCTRL (B2h): Porch Setting
    [0xB7, 0],     // GCTRL (B7h): Gate Control
    [0xBB, 0x3E],  // VCOMS (BBh): VCOM Setting 
    [0xC2, 1],     // VDVVRHEN (C2h): VDV and VRH Command Enable
    [0xC3, 0x19],  // VRHS (C3h): VRH Set 
    [0xC4, 0x20],  // VDVS (C4h): VDV Set
    [0xC5, 0xF],   // VCMOFSET (C5h): VCOM Offset Set .
    [0xD0, 0xA4, 0xA1],   // PWCTRL1 (D0h): Power Control 1 
    [0xe0, 0x70, 0x15, 0x20, 0x15, 0x10, 0x09, 0x48, 0x33, 0x53, 0x0B, 0x19, 0x15, 0x2a, 0x2f],   // PVGAMCTRL (E0h): Positive Voltage Gamma Control
    [0xe1, 0x70, 0x15, 0x20, 0x15, 0x10, 0x09, 0x48, 0x33, 0x53, 0x0B, 0x19, 0x15, 0x2a, 0x2f],   // NVGAMCTRL (E1h): Negative Voltage Gamma Contro
    [0x29, 0], // DISPON (29h): Display On 
    [0x21, 0], // INVON (21h): Display Inversion On
    // End
    [0, 0]// 255/*DATA_LEN = 255 => END*/
  ];

  setTimeout(() => {
    SPIM.sendSync([0x11, 0], 1); //Exit Sleep
    setTimeout(() => {
      ST7789_INIT_CODE.forEach(cmd => SPIM.sendSync(cmd, 1));
      resolve();
    }, 20);
  }, 120);
});

module.exports = init;
}
fileCache['./src/devices/B271.js'] = () => {
// Espruino driver for an unknown accelerometer labelled "B271 VS35".

const I2C_DEVICEID = 0x1f;
const I2C_REG = 0x02;

const u8u8tos16 = (byteA, byteB) => {
  const sign = byteA & (1 << 7);
  var x = ((byteA & 0xff) << 8) | (byteB & 0xff);
  if (sign) {
    return 0xffff0000 | x; // fill in most significant bits with 1's
  }
  return x;
};

/*
 cfg.sda - i2c sda pin
 cfg.scl - i2c scl pin
 cfg.enable - i2c reset pin, high to enable device
*/
function init(cfg) {
  const i2c = new I2C();
  i2c.setup({ sda: cfg.sda, scl: cfg.scl });

  const result = {
    enable: () => cfg.enable.write(1),
    disable: () => cfg.enable.write(0),
    read: () => {
      i2c.writeTo(I2C_DEVICEID, I2C_REG);
      const data = i2c.readFrom(I2C_DEVICEID, 6);
      return {
        x: u8u8tos16(data[1], data[0]) >> 6,
        y: u8u8tos16(data[3], data[2]) >> 6,
        z: u8u8tos16(data[5], data[4]) >> 6
      };
    }
  };

  return result;
}

module.exports = init;
}
